Terminals unused in grammar

    TRUE
    FALSE


State 37 conflicts: 12 shift/reduce
State 45 conflicts: 12 shift/reduce
State 47 conflicts: 12 shift/reduce
State 52 conflicts: 12 shift/reduce
State 64 conflicts: 12 shift/reduce
State 65 conflicts: 1 shift/reduce
State 81 conflicts: 12 shift/reduce
State 82 conflicts: 1 shift/reduce
State 91 conflicts: 12 shift/reduce
State 95 conflicts: 12 shift/reduce
State 96 conflicts: 12 shift/reduce
State 100 conflicts: 12 shift/reduce
State 101 conflicts: 12 shift/reduce
State 110 conflicts: 12 shift/reduce
State 132 conflicts: 12 shift/reduce
State 134 conflicts: 12 shift/reduce
State 166 conflicts: 13 shift/reduce
State 167 conflicts: 1 shift/reduce
State 168 conflicts: 12 shift/reduce
State 173 conflicts: 12 shift/reduce
State 195 conflicts: 12 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: GlobalStatementList

    2 GlobalStatementList: GlobalStatementList GlobalStatement
    3                    | GlobalStatement

    4 GlobalStatement: PackageStmt NEWLINE
    5                | FunctionDeclStmt
    6                | NEWLINE

    7 $@1: %empty

    8 PackageStmt: PACKAGE IDENT $@1

    9 $@2: %empty

   10 $@3: %empty

   11 $@4: %empty

   12 FunctionDeclStmt: FuncOpen $@2 '(' ParameterList ')' $@3 ReturnType $@4 FuncBlock

   13 FuncOpen: FUNC IDENT

   14 $@5: %empty

   15 ParameterList: IDENT ParamType $@5 ParameterList
   16              | ',' ParameterList
   17              | %empty

   18 ParamType: INT
   19          | FLOAT
   20          | STRING
   21          | BOOL

   22 ReturnType: INT
   23           | FLOAT
   24           | STRING
   25           | BOOL
   26           | %empty

   27 FuncBlock: '{' StatementList '}'

   28 ReturnStmt: RETURN HaveReturn

   29 HaveReturn: Expression
   30           | %empty

   31 Statement: DeclarationStmt NEWLINE
   32          | SimpleStmt NEWLINE
   33          | Block
   34          | IfStmt
   35          | ForStmt
   36          | SwitchStmt
   37          | CaseStmt
   38          | PrintStmt NEWLINE
   39          | ReturnStmt NEWLINE
   40          | NEWLINE
   41          | call_func NEWLINE

   42 call_func: IDENT '(' input_list ')'

   43 input_list: input input_list
   44           | ',' input_list
   45           | %empty

   46 input: IDENT
   47      | INT_LIT
   48      | FLOAT_LIT

   49 DeclarationStmt: VAR IDENT Type Assign_ornot

   50 Assign_ornot: '=' Expression
   51             | %empty

   52 SimpleStmt: AssignmentStmt
   53           | ExpressionStmt
   54           | IncDecStmt

   55 AssignmentStmt: Expression assign_op Expression

   56 assign_op: '='
   57          | ADD_ASSIGN
   58          | SUB_ASSIGN
   59          | MUL_ASSIGN
   60          | QUO_ASSIGN
   61          | REM_ASSIGN

   62 ExpressionStmt: Expression

   63 IncDecStmt: Expression INC_DEC

   64 INC_DEC: INC
   65        | DEC

   66 $@6: %empty

   67 Block: '{' $@6 StatementList '}'

   68 StatementList: Statement StatementList
   69              | %empty

   70 $@7: %empty

   71 IfStmt: IF Condition $@7 Block If_Else

   72 If_Else: ELSE If_Block
   73        | %empty

   74 If_Block: IfStmt
   75         | Block

   76 Condition: Expression

   77 $@8: %empty

   78 ForStmt: FOR $@8 ForType

   79 $@9: %empty

   80 ForType: Condition $@9 Block
   81        | ForClause Block

   82 ForClause: InitStmt ';' Condition ';' PostStmt

   83 InitStmt: SimpleStmt

   84 PostStmt: SimpleStmt

   85 $@10: %empty

   86 SwitchStmt: SWITCH Expression $@10 Block

   87 $@11: %empty

   88 CaseStmt: CASE INT_LIT $@11 ':' Block

   89 $@12: %empty

   90 CaseStmt: DEFAULT $@12 ':' Block

   91 PrintStmt: PRINT '(' Expression ')'
   92          | PRINTLN '(' Expression ')'

   93 Type: INT
   94     | FLOAT
   95     | STRING
   96     | BOOL

   97 Expression: UnaryExpr
   98           | Expression binary_op Expression
   99           | '"' STRING_LIT '"'
  100           | call_func

  101 UnaryExpr: PrimaryExpr
  102          | unary_op UnaryExpr

  103 binary_op: LOR
  104          | LAND
  105          | cmp_op
  106          | add_op
  107          | mul_op

  108 cmp_op: EQL
  109       | NEQ
  110       | '<'
  111       | LEQ
  112       | '>'
  113       | GEQ

  114 add_op: '+'
  115       | '-'

  116 mul_op: '*'
  117       | '/'
  118       | '%'

  119 unary_op: '+'
  120         | '-'

  121 $@13: %empty

  122 unary_op: $@13 Dup_Not

  123 $@14: %empty

  124 Dup_Not: '!' $@14 Dup_Not
  125        | %empty

  126 PrimaryExpr: Operand
  127            | ConversionExpr

  128 Operand: Literal
  129        | IDENT

  130 $@15: %empty

  131 Operand: '(' $@15 Expression ')'

  132 Literal: INT_LIT
  133        | FLOAT_LIT
  134        | BOOL_LIT
  135        | STRING_LIT

  136 ConversionExpr: Type '(' Expression ')'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 124
    '"' (34) 99
    '%' (37) 118
    '(' (40) 12 42 91 92 131 136
    ')' (41) 12 42 91 92 131 136
    '*' (42) 116
    '+' (43) 114 119
    ',' (44) 16 44
    '-' (45) 115 120
    '/' (47) 117
    ':' (58) 88 90
    ';' (59) 82
    '<' (60) 110
    '=' (61) 50 56
    '>' (62) 112
    '{' (123) 27 67
    '}' (125) 27 67
    error (256)
    VAR (258) 49
    NEWLINE (259) 4 6 31 32 38 39 40 41
    INT (260) 18 22 93
    FLOAT (261) 19 23 94
    BOOL (262) 21 25 96
    STRING (263) 20 24 95
    TRUE (264)
    FALSE (265)
    INC (266) 64
    DEC (267) 65
    GEQ (268) 113
    LOR (269) 103
    LAND (270) 104
    LEQ (271) 111
    EQL (272) 108
    NEQ (273) 109
    ADD_ASSIGN (274) 57
    SUB_ASSIGN (275) 58
    MUL_ASSIGN (276) 59
    QUO_ASSIGN (277) 60
    REM_ASSIGN (278) 61
    IF (279) 71
    ELSE (280) 72
    FOR (281) 78
    SWITCH (282) 86
    CASE (283) 88
    DEFAULT (284) 90
    PRINT (285) 91
    PRINTLN (286) 92
    PACKAGE (287) 8
    FUNC (288) 13
    RETURN (289) 28
    INT_LIT <i_val> (290) 47 88 132
    FLOAT_LIT <f_val> (291) 48 133
    STRING_LIT <s_val> (292) 99 135
    BOOL_LIT <b_val> (293) 134
    IDENT <s_val> (294) 8 13 15 42 46 49 129


Nonterminals, with rules where they appear

    $accept (57)
        on left: 0
    Program (58)
        on left: 1
        on right: 0
    GlobalStatementList (59)
        on left: 2 3
        on right: 1 2
    GlobalStatement (60)
        on left: 4 5 6
        on right: 2 3
    PackageStmt (61)
        on left: 8
        on right: 4
    $@1 (62)
        on left: 7
        on right: 8
    FunctionDeclStmt (63)
        on left: 12
        on right: 5
    $@2 (64)
        on left: 9
        on right: 12
    $@3 (65)
        on left: 10
        on right: 12
    $@4 (66)
        on left: 11
        on right: 12
    FuncOpen (67)
        on left: 13
        on right: 12
    ParameterList (68)
        on left: 15 16 17
        on right: 12 15 16
    $@5 (69)
        on left: 14
        on right: 15
    ParamType (70)
        on left: 18 19 20 21
        on right: 15
    ReturnType (71)
        on left: 22 23 24 25 26
        on right: 12
    FuncBlock (72)
        on left: 27
        on right: 12
    ReturnStmt (73)
        on left: 28
        on right: 39
    HaveReturn (74)
        on left: 29 30
        on right: 28
    Statement (75)
        on left: 31 32 33 34 35 36 37 38 39 40 41
        on right: 68
    call_func (76)
        on left: 42
        on right: 41 100
    input_list (77)
        on left: 43 44 45
        on right: 42 43 44
    input (78)
        on left: 46 47 48
        on right: 43
    DeclarationStmt (79)
        on left: 49
        on right: 31
    Assign_ornot (80)
        on left: 50 51
        on right: 49
    SimpleStmt (81)
        on left: 52 53 54
        on right: 32 83 84
    AssignmentStmt (82)
        on left: 55
        on right: 52
    assign_op (83)
        on left: 56 57 58 59 60 61
        on right: 55
    ExpressionStmt (84)
        on left: 62
        on right: 53
    IncDecStmt (85)
        on left: 63
        on right: 54
    INC_DEC (86)
        on left: 64 65
        on right: 63
    Block (87)
        on left: 67
        on right: 33 71 75 80 81 86 88 90
    $@6 (88)
        on left: 66
        on right: 67
    StatementList (89)
        on left: 68 69
        on right: 27 67 68
    IfStmt (90)
        on left: 71
        on right: 34 74
    $@7 (91)
        on left: 70
        on right: 71
    If_Else (92)
        on left: 72 73
        on right: 71
    If_Block (93)
        on left: 74 75
        on right: 72
    Condition (94)
        on left: 76
        on right: 71 80 82
    ForStmt (95)
        on left: 78
        on right: 35
    $@8 (96)
        on left: 77
        on right: 78
    ForType (97)
        on left: 80 81
        on right: 78
    $@9 (98)
        on left: 79
        on right: 80
    ForClause (99)
        on left: 82
        on right: 81
    InitStmt (100)
        on left: 83
        on right: 82
    PostStmt (101)
        on left: 84
        on right: 82
    SwitchStmt (102)
        on left: 86
        on right: 36
    $@10 (103)
        on left: 85
        on right: 86
    CaseStmt (104)
        on left: 88 90
        on right: 37
    $@11 (105)
        on left: 87
        on right: 88
    $@12 (106)
        on left: 89
        on right: 90
    PrintStmt (107)
        on left: 91 92
        on right: 38
    Type (108)
        on left: 93 94 95 96
        on right: 49 136
    Expression (109)
        on left: 97 98 99 100
        on right: 29 50 55 62 63 76 86 91 92 98 131 136
    UnaryExpr (110)
        on left: 101 102
        on right: 97 102
    binary_op (111)
        on left: 103 104 105 106 107
        on right: 98
    cmp_op (112)
        on left: 108 109 110 111 112 113
        on right: 105
    add_op (113)
        on left: 114 115
        on right: 106
    mul_op (114)
        on left: 116 117 118
        on right: 107
    unary_op (115)
        on left: 119 120 122
        on right: 102
    $@13 (116)
        on left: 121
        on right: 122
    Dup_Not (117)
        on left: 124 125
        on right: 122 124
    $@14 (118)
        on left: 123
        on right: 124
    PrimaryExpr (119)
        on left: 126 127
        on right: 101
    Operand (120)
        on left: 128 129 131
        on right: 126
    $@15 (121)
        on left: 130
        on right: 131
    Literal (122)
        on left: 132 133 134 135
        on right: 128
    ConversionExpr (123)
        on left: 136
        on right: 127


State 0

    0 $accept: . Program $end

    NEWLINE  shift, and go to state 1
    PACKAGE  shift, and go to state 2
    FUNC     shift, and go to state 3

    Program              go to state 4
    GlobalStatementList  go to state 5
    GlobalStatement      go to state 6
    PackageStmt          go to state 7
    FunctionDeclStmt     go to state 8
    FuncOpen             go to state 9


State 1

    6 GlobalStatement: NEWLINE .

    $default  reduce using rule 6 (GlobalStatement)


State 2

    8 PackageStmt: PACKAGE . IDENT $@1

    IDENT  shift, and go to state 10


State 3

   13 FuncOpen: FUNC . IDENT

    IDENT  shift, and go to state 11


State 4

    0 $accept: Program . $end

    $end  shift, and go to state 12


State 5

    1 Program: GlobalStatementList .
    2 GlobalStatementList: GlobalStatementList . GlobalStatement

    NEWLINE  shift, and go to state 1
    PACKAGE  shift, and go to state 2
    FUNC     shift, and go to state 3

    $default  reduce using rule 1 (Program)

    GlobalStatement   go to state 13
    PackageStmt       go to state 7
    FunctionDeclStmt  go to state 8
    FuncOpen          go to state 9


State 6

    3 GlobalStatementList: GlobalStatement .

    $default  reduce using rule 3 (GlobalStatementList)


State 7

    4 GlobalStatement: PackageStmt . NEWLINE

    NEWLINE  shift, and go to state 14


State 8

    5 GlobalStatement: FunctionDeclStmt .

    $default  reduce using rule 5 (GlobalStatement)


State 9

   12 FunctionDeclStmt: FuncOpen . $@2 '(' ParameterList ')' $@3 ReturnType $@4 FuncBlock

    $default  reduce using rule 9 ($@2)

    $@2  go to state 15


State 10

    8 PackageStmt: PACKAGE IDENT . $@1

    $default  reduce using rule 7 ($@1)

    $@1  go to state 16


State 11

   13 FuncOpen: FUNC IDENT .

    $default  reduce using rule 13 (FuncOpen)


State 12

    0 $accept: Program $end .

    $default  accept


State 13

    2 GlobalStatementList: GlobalStatementList GlobalStatement .

    $default  reduce using rule 2 (GlobalStatementList)


State 14

    4 GlobalStatement: PackageStmt NEWLINE .

    $default  reduce using rule 4 (GlobalStatement)


State 15

   12 FunctionDeclStmt: FuncOpen $@2 . '(' ParameterList ')' $@3 ReturnType $@4 FuncBlock

    '('  shift, and go to state 17


State 16

    8 PackageStmt: PACKAGE IDENT $@1 .

    $default  reduce using rule 8 (PackageStmt)


State 17

   12 FunctionDeclStmt: FuncOpen $@2 '(' . ParameterList ')' $@3 ReturnType $@4 FuncBlock

    IDENT  shift, and go to state 18
    ','    shift, and go to state 19

    $default  reduce using rule 17 (ParameterList)

    ParameterList  go to state 20


State 18

   15 ParameterList: IDENT . ParamType $@5 ParameterList

    INT     shift, and go to state 21
    FLOAT   shift, and go to state 22
    BOOL    shift, and go to state 23
    STRING  shift, and go to state 24

    ParamType  go to state 25


State 19

   16 ParameterList: ',' . ParameterList

    IDENT  shift, and go to state 18
    ','    shift, and go to state 19

    $default  reduce using rule 17 (ParameterList)

    ParameterList  go to state 26


State 20

   12 FunctionDeclStmt: FuncOpen $@2 '(' ParameterList . ')' $@3 ReturnType $@4 FuncBlock

    ')'  shift, and go to state 27


State 21

   18 ParamType: INT .

    $default  reduce using rule 18 (ParamType)


State 22

   19 ParamType: FLOAT .

    $default  reduce using rule 19 (ParamType)


State 23

   21 ParamType: BOOL .

    $default  reduce using rule 21 (ParamType)


State 24

   20 ParamType: STRING .

    $default  reduce using rule 20 (ParamType)


State 25

   15 ParameterList: IDENT ParamType . $@5 ParameterList

    $default  reduce using rule 14 ($@5)

    $@5  go to state 28


State 26

   16 ParameterList: ',' ParameterList .

    $default  reduce using rule 16 (ParameterList)


State 27

   12 FunctionDeclStmt: FuncOpen $@2 '(' ParameterList ')' . $@3 ReturnType $@4 FuncBlock

    $default  reduce using rule 10 ($@3)

    $@3  go to state 29


State 28

   15 ParameterList: IDENT ParamType $@5 . ParameterList

    IDENT  shift, and go to state 18
    ','    shift, and go to state 19

    $default  reduce using rule 17 (ParameterList)

    ParameterList  go to state 30


State 29

   12 FunctionDeclStmt: FuncOpen $@2 '(' ParameterList ')' $@3 . ReturnType $@4 FuncBlock

    INT     shift, and go to state 31
    FLOAT   shift, and go to state 32
    BOOL    shift, and go to state 33
    STRING  shift, and go to state 34

    $default  reduce using rule 26 (ReturnType)

    ReturnType  go to state 35


State 30

   15 ParameterList: IDENT ParamType $@5 ParameterList .

    $default  reduce using rule 15 (ParameterList)


State 31

   22 ReturnType: INT .

    $default  reduce using rule 22 (ReturnType)


State 32

   23 ReturnType: FLOAT .

    $default  reduce using rule 23 (ReturnType)


State 33

   25 ReturnType: BOOL .

    $default  reduce using rule 25 (ReturnType)


State 34

   24 ReturnType: STRING .

    $default  reduce using rule 24 (ReturnType)


State 35

   12 FunctionDeclStmt: FuncOpen $@2 '(' ParameterList ')' $@3 ReturnType . $@4 FuncBlock

    $default  reduce using rule 11 ($@4)

    $@4  go to state 36


State 36

   12 FunctionDeclStmt: FuncOpen $@2 '(' ParameterList ')' $@3 ReturnType $@4 . FuncBlock

    '{'  shift, and go to state 37

    FuncBlock  go to state 38


State 37

   27 FuncBlock: '{' . StatementList '}'

    VAR         shift, and go to state 39
    NEWLINE     shift, and go to state 40
    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IF          shift, and go to state 45
    FOR         shift, and go to state 46
    SWITCH      shift, and go to state 47
    CASE        shift, and go to state 48
    DEFAULT     shift, and go to state 49
    PRINT       shift, and go to state 50
    PRINTLN     shift, and go to state 51
    RETURN      shift, and go to state 52
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 57
    '('         shift, and go to state 58
    '{'         shift, and go to state 59
    '"'         shift, and go to state 60
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 121 ($@13)]
    FLOAT       [reduce using rule 121 ($@13)]
    BOOL        [reduce using rule 121 ($@13)]
    STRING      [reduce using rule 121 ($@13)]
    INT_LIT     [reduce using rule 121 ($@13)]
    FLOAT_LIT   [reduce using rule 121 ($@13)]
    STRING_LIT  [reduce using rule 121 ($@13)]
    BOOL_LIT    [reduce using rule 121 ($@13)]
    IDENT       [reduce using rule 121 ($@13)]
    '('         [reduce using rule 121 ($@13)]
    '+'         [reduce using rule 121 ($@13)]
    '-'         [reduce using rule 121 ($@13)]
    '!'         reduce using rule 121 ($@13)
    $default    reduce using rule 69 (StatementList)

    ReturnStmt       go to state 63
    Statement        go to state 64
    call_func        go to state 65
    DeclarationStmt  go to state 66
    SimpleStmt       go to state 67
    AssignmentStmt   go to state 68
    ExpressionStmt   go to state 69
    IncDecStmt       go to state 70
    Block            go to state 71
    StatementList    go to state 72
    IfStmt           go to state 73
    ForStmt          go to state 74
    SwitchStmt       go to state 75
    CaseStmt         go to state 76
    PrintStmt        go to state 77
    Type             go to state 78
    Expression       go to state 79
    UnaryExpr        go to state 80
    unary_op         go to state 81
    $@13             go to state 82
    PrimaryExpr      go to state 83
    Operand          go to state 84
    Literal          go to state 85
    ConversionExpr   go to state 86


State 38

   12 FunctionDeclStmt: FuncOpen $@2 '(' ParameterList ')' $@3 ReturnType $@4 FuncBlock .

    $default  reduce using rule 12 (FunctionDeclStmt)


State 39

   49 DeclarationStmt: VAR . IDENT Type Assign_ornot

    IDENT  shift, and go to state 87


State 40

   40 Statement: NEWLINE .

    $default  reduce using rule 40 (Statement)


State 41

   93 Type: INT .

    $default  reduce using rule 93 (Type)


State 42

   94 Type: FLOAT .

    $default  reduce using rule 94 (Type)


State 43

   96 Type: BOOL .

    $default  reduce using rule 96 (Type)


State 44

   95 Type: STRING .

    $default  reduce using rule 95 (Type)


State 45

   71 IfStmt: IF . Condition $@7 Block If_Else

    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 57
    '('         shift, and go to state 58
    '"'         shift, and go to state 60
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 121 ($@13)]
    FLOAT       [reduce using rule 121 ($@13)]
    BOOL        [reduce using rule 121 ($@13)]
    STRING      [reduce using rule 121 ($@13)]
    INT_LIT     [reduce using rule 121 ($@13)]
    FLOAT_LIT   [reduce using rule 121 ($@13)]
    STRING_LIT  [reduce using rule 121 ($@13)]
    BOOL_LIT    [reduce using rule 121 ($@13)]
    IDENT       [reduce using rule 121 ($@13)]
    '('         [reduce using rule 121 ($@13)]
    '+'         [reduce using rule 121 ($@13)]
    '-'         [reduce using rule 121 ($@13)]
    $default    reduce using rule 121 ($@13)

    call_func       go to state 88
    Condition       go to state 89
    Type            go to state 78
    Expression      go to state 90
    UnaryExpr       go to state 80
    unary_op        go to state 81
    $@13            go to state 82
    PrimaryExpr     go to state 83
    Operand         go to state 84
    Literal         go to state 85
    ConversionExpr  go to state 86


State 46

   78 ForStmt: FOR . $@8 ForType

    $default  reduce using rule 77 ($@8)

    $@8  go to state 91


State 47

   86 SwitchStmt: SWITCH . Expression $@10 Block

    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 57
    '('         shift, and go to state 58
    '"'         shift, and go to state 60
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 121 ($@13)]
    FLOAT       [reduce using rule 121 ($@13)]
    BOOL        [reduce using rule 121 ($@13)]
    STRING      [reduce using rule 121 ($@13)]
    INT_LIT     [reduce using rule 121 ($@13)]
    FLOAT_LIT   [reduce using rule 121 ($@13)]
    STRING_LIT  [reduce using rule 121 ($@13)]
    BOOL_LIT    [reduce using rule 121 ($@13)]
    IDENT       [reduce using rule 121 ($@13)]
    '('         [reduce using rule 121 ($@13)]
    '+'         [reduce using rule 121 ($@13)]
    '-'         [reduce using rule 121 ($@13)]
    $default    reduce using rule 121 ($@13)

    call_func       go to state 88
    Type            go to state 78
    Expression      go to state 92
    UnaryExpr       go to state 80
    unary_op        go to state 81
    $@13            go to state 82
    PrimaryExpr     go to state 83
    Operand         go to state 84
    Literal         go to state 85
    ConversionExpr  go to state 86


State 48

   88 CaseStmt: CASE . INT_LIT $@11 ':' Block

    INT_LIT  shift, and go to state 93


State 49

   90 CaseStmt: DEFAULT . $@12 ':' Block

    $default  reduce using rule 89 ($@12)

    $@12  go to state 94


State 50

   91 PrintStmt: PRINT . '(' Expression ')'

    '('  shift, and go to state 95


State 51

   92 PrintStmt: PRINTLN . '(' Expression ')'

    '('  shift, and go to state 96


State 52

   28 ReturnStmt: RETURN . HaveReturn

    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 57
    '('         shift, and go to state 58
    '"'         shift, and go to state 60
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 121 ($@13)]
    FLOAT       [reduce using rule 121 ($@13)]
    BOOL        [reduce using rule 121 ($@13)]
    STRING      [reduce using rule 121 ($@13)]
    INT_LIT     [reduce using rule 121 ($@13)]
    FLOAT_LIT   [reduce using rule 121 ($@13)]
    STRING_LIT  [reduce using rule 121 ($@13)]
    BOOL_LIT    [reduce using rule 121 ($@13)]
    IDENT       [reduce using rule 121 ($@13)]
    '('         [reduce using rule 121 ($@13)]
    '+'         [reduce using rule 121 ($@13)]
    '-'         [reduce using rule 121 ($@13)]
    '!'         reduce using rule 121 ($@13)
    $default    reduce using rule 30 (HaveReturn)

    HaveReturn      go to state 97
    call_func       go to state 88
    Type            go to state 78
    Expression      go to state 98
    UnaryExpr       go to state 80
    unary_op        go to state 81
    $@13            go to state 82
    PrimaryExpr     go to state 83
    Operand         go to state 84
    Literal         go to state 85
    ConversionExpr  go to state 86


State 53

  132 Literal: INT_LIT .

    $default  reduce using rule 132 (Literal)


State 54

  133 Literal: FLOAT_LIT .

    $default  reduce using rule 133 (Literal)


State 55

  135 Literal: STRING_LIT .

    $default  reduce using rule 135 (Literal)


State 56

  134 Literal: BOOL_LIT .

    $default  reduce using rule 134 (Literal)


State 57

   42 call_func: IDENT . '(' input_list ')'
  129 Operand: IDENT .

    '('  shift, and go to state 99

    $default  reduce using rule 129 (Operand)


State 58

  131 Operand: '(' . $@15 Expression ')'

    $default  reduce using rule 130 ($@15)

    $@15  go to state 100


State 59

   67 Block: '{' . $@6 StatementList '}'

    $default  reduce using rule 66 ($@6)

    $@6  go to state 101


State 60

   99 Expression: '"' . STRING_LIT '"'

    STRING_LIT  shift, and go to state 102


State 61

  119 unary_op: '+' .

    $default  reduce using rule 119 (unary_op)


State 62

  120 unary_op: '-' .

    $default  reduce using rule 120 (unary_op)


State 63

   39 Statement: ReturnStmt . NEWLINE

    NEWLINE  shift, and go to state 103


State 64

   68 StatementList: Statement . StatementList

    VAR         shift, and go to state 39
    NEWLINE     shift, and go to state 40
    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IF          shift, and go to state 45
    FOR         shift, and go to state 46
    SWITCH      shift, and go to state 47
    CASE        shift, and go to state 48
    DEFAULT     shift, and go to state 49
    PRINT       shift, and go to state 50
    PRINTLN     shift, and go to state 51
    RETURN      shift, and go to state 52
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 57
    '('         shift, and go to state 58
    '{'         shift, and go to state 59
    '"'         shift, and go to state 60
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 121 ($@13)]
    FLOAT       [reduce using rule 121 ($@13)]
    BOOL        [reduce using rule 121 ($@13)]
    STRING      [reduce using rule 121 ($@13)]
    INT_LIT     [reduce using rule 121 ($@13)]
    FLOAT_LIT   [reduce using rule 121 ($@13)]
    STRING_LIT  [reduce using rule 121 ($@13)]
    BOOL_LIT    [reduce using rule 121 ($@13)]
    IDENT       [reduce using rule 121 ($@13)]
    '('         [reduce using rule 121 ($@13)]
    '+'         [reduce using rule 121 ($@13)]
    '-'         [reduce using rule 121 ($@13)]
    '!'         reduce using rule 121 ($@13)
    $default    reduce using rule 69 (StatementList)

    ReturnStmt       go to state 63
    Statement        go to state 64
    call_func        go to state 65
    DeclarationStmt  go to state 66
    SimpleStmt       go to state 67
    AssignmentStmt   go to state 68
    ExpressionStmt   go to state 69
    IncDecStmt       go to state 70
    Block            go to state 71
    StatementList    go to state 104
    IfStmt           go to state 73
    ForStmt          go to state 74
    SwitchStmt       go to state 75
    CaseStmt         go to state 76
    PrintStmt        go to state 77
    Type             go to state 78
    Expression       go to state 79
    UnaryExpr        go to state 80
    unary_op         go to state 81
    $@13             go to state 82
    PrimaryExpr      go to state 83
    Operand          go to state 84
    Literal          go to state 85
    ConversionExpr   go to state 86


State 65

   41 Statement: call_func . NEWLINE
  100 Expression: call_func .

    NEWLINE  shift, and go to state 105

    NEWLINE   [reduce using rule 100 (Expression)]
    $default  reduce using rule 100 (Expression)


State 66

   31 Statement: DeclarationStmt . NEWLINE

    NEWLINE  shift, and go to state 106


State 67

   32 Statement: SimpleStmt . NEWLINE

    NEWLINE  shift, and go to state 107


State 68

   52 SimpleStmt: AssignmentStmt .

    $default  reduce using rule 52 (SimpleStmt)


State 69

   53 SimpleStmt: ExpressionStmt .

    $default  reduce using rule 53 (SimpleStmt)


State 70

   54 SimpleStmt: IncDecStmt .

    $default  reduce using rule 54 (SimpleStmt)


State 71

   33 Statement: Block .

    $default  reduce using rule 33 (Statement)


State 72

   27 FuncBlock: '{' StatementList . '}'

    '}'  shift, and go to state 108


State 73

   34 Statement: IfStmt .

    $default  reduce using rule 34 (Statement)


State 74

   35 Statement: ForStmt .

    $default  reduce using rule 35 (Statement)


State 75

   36 Statement: SwitchStmt .

    $default  reduce using rule 36 (Statement)


State 76

   37 Statement: CaseStmt .

    $default  reduce using rule 37 (Statement)


State 77

   38 Statement: PrintStmt . NEWLINE

    NEWLINE  shift, and go to state 109


State 78

  136 ConversionExpr: Type . '(' Expression ')'

    '('  shift, and go to state 110


State 79

   55 AssignmentStmt: Expression . assign_op Expression
   62 ExpressionStmt: Expression .
   63 IncDecStmt: Expression . INC_DEC
   98 Expression: Expression . binary_op Expression

    INC         shift, and go to state 111
    DEC         shift, and go to state 112
    GEQ         shift, and go to state 113
    LOR         shift, and go to state 114
    LAND        shift, and go to state 115
    LEQ         shift, and go to state 116
    EQL         shift, and go to state 117
    NEQ         shift, and go to state 118
    ADD_ASSIGN  shift, and go to state 119
    SUB_ASSIGN  shift, and go to state 120
    MUL_ASSIGN  shift, and go to state 121
    QUO_ASSIGN  shift, and go to state 122
    REM_ASSIGN  shift, and go to state 123
    '='         shift, and go to state 124
    '<'         shift, and go to state 125
    '>'         shift, and go to state 126
    '+'         shift, and go to state 127
    '-'         shift, and go to state 128
    '*'         shift, and go to state 129
    '/'         shift, and go to state 130
    '%'         shift, and go to state 131

    $default  reduce using rule 62 (ExpressionStmt)

    assign_op  go to state 132
    INC_DEC    go to state 133
    binary_op  go to state 134
    cmp_op     go to state 135
    add_op     go to state 136
    mul_op     go to state 137


State 80

   97 Expression: UnaryExpr .

    $default  reduce using rule 97 (Expression)


State 81

  102 UnaryExpr: unary_op . UnaryExpr

    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 138
    '('         shift, and go to state 58
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 121 ($@13)]
    FLOAT       [reduce using rule 121 ($@13)]
    BOOL        [reduce using rule 121 ($@13)]
    STRING      [reduce using rule 121 ($@13)]
    INT_LIT     [reduce using rule 121 ($@13)]
    FLOAT_LIT   [reduce using rule 121 ($@13)]
    STRING_LIT  [reduce using rule 121 ($@13)]
    BOOL_LIT    [reduce using rule 121 ($@13)]
    IDENT       [reduce using rule 121 ($@13)]
    '('         [reduce using rule 121 ($@13)]
    '+'         [reduce using rule 121 ($@13)]
    '-'         [reduce using rule 121 ($@13)]
    $default    reduce using rule 121 ($@13)

    Type            go to state 78
    UnaryExpr       go to state 139
    unary_op        go to state 81
    $@13            go to state 82
    PrimaryExpr     go to state 83
    Operand         go to state 84
    Literal         go to state 85
    ConversionExpr  go to state 86


State 82

  122 unary_op: $@13 . Dup_Not

    '!'  shift, and go to state 140

    '!'       [reduce using rule 125 (Dup_Not)]
    $default  reduce using rule 125 (Dup_Not)

    Dup_Not  go to state 141


State 83

  101 UnaryExpr: PrimaryExpr .

    $default  reduce using rule 101 (UnaryExpr)


State 84

  126 PrimaryExpr: Operand .

    $default  reduce using rule 126 (PrimaryExpr)


State 85

  128 Operand: Literal .

    $default  reduce using rule 128 (Operand)


State 86

  127 PrimaryExpr: ConversionExpr .

    $default  reduce using rule 127 (PrimaryExpr)


State 87

   49 DeclarationStmt: VAR IDENT . Type Assign_ornot

    INT     shift, and go to state 41
    FLOAT   shift, and go to state 42
    BOOL    shift, and go to state 43
    STRING  shift, and go to state 44

    Type  go to state 142


State 88

  100 Expression: call_func .

    $default  reduce using rule 100 (Expression)


State 89

   71 IfStmt: IF Condition . $@7 Block If_Else

    $default  reduce using rule 70 ($@7)

    $@7  go to state 143


State 90

   76 Condition: Expression .
   98 Expression: Expression . binary_op Expression

    GEQ   shift, and go to state 113
    LOR   shift, and go to state 114
    LAND  shift, and go to state 115
    LEQ   shift, and go to state 116
    EQL   shift, and go to state 117
    NEQ   shift, and go to state 118
    '<'   shift, and go to state 125
    '>'   shift, and go to state 126
    '+'   shift, and go to state 127
    '-'   shift, and go to state 128
    '*'   shift, and go to state 129
    '/'   shift, and go to state 130
    '%'   shift, and go to state 131

    $default  reduce using rule 76 (Condition)

    binary_op  go to state 134
    cmp_op     go to state 135
    add_op     go to state 136
    mul_op     go to state 137


State 91

   78 ForStmt: FOR $@8 . ForType

    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 57
    '('         shift, and go to state 58
    '"'         shift, and go to state 60
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 121 ($@13)]
    FLOAT       [reduce using rule 121 ($@13)]
    BOOL        [reduce using rule 121 ($@13)]
    STRING      [reduce using rule 121 ($@13)]
    INT_LIT     [reduce using rule 121 ($@13)]
    FLOAT_LIT   [reduce using rule 121 ($@13)]
    STRING_LIT  [reduce using rule 121 ($@13)]
    BOOL_LIT    [reduce using rule 121 ($@13)]
    IDENT       [reduce using rule 121 ($@13)]
    '('         [reduce using rule 121 ($@13)]
    '+'         [reduce using rule 121 ($@13)]
    '-'         [reduce using rule 121 ($@13)]
    $default    reduce using rule 121 ($@13)

    call_func       go to state 88
    SimpleStmt      go to state 144
    AssignmentStmt  go to state 68
    ExpressionStmt  go to state 69
    IncDecStmt      go to state 70
    Condition       go to state 145
    ForType         go to state 146
    ForClause       go to state 147
    InitStmt        go to state 148
    Type            go to state 78
    Expression      go to state 149
    UnaryExpr       go to state 80
    unary_op        go to state 81
    $@13            go to state 82
    PrimaryExpr     go to state 83
    Operand         go to state 84
    Literal         go to state 85
    ConversionExpr  go to state 86


State 92

   86 SwitchStmt: SWITCH Expression . $@10 Block
   98 Expression: Expression . binary_op Expression

    GEQ   shift, and go to state 113
    LOR   shift, and go to state 114
    LAND  shift, and go to state 115
    LEQ   shift, and go to state 116
    EQL   shift, and go to state 117
    NEQ   shift, and go to state 118
    '<'   shift, and go to state 125
    '>'   shift, and go to state 126
    '+'   shift, and go to state 127
    '-'   shift, and go to state 128
    '*'   shift, and go to state 129
    '/'   shift, and go to state 130
    '%'   shift, and go to state 131

    $default  reduce using rule 85 ($@10)

    $@10       go to state 150
    binary_op  go to state 134
    cmp_op     go to state 135
    add_op     go to state 136
    mul_op     go to state 137


State 93

   88 CaseStmt: CASE INT_LIT . $@11 ':' Block

    $default  reduce using rule 87 ($@11)

    $@11  go to state 151


State 94

   90 CaseStmt: DEFAULT $@12 . ':' Block

    ':'  shift, and go to state 152


State 95

   91 PrintStmt: PRINT '(' . Expression ')'

    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 57
    '('         shift, and go to state 58
    '"'         shift, and go to state 60
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 121 ($@13)]
    FLOAT       [reduce using rule 121 ($@13)]
    BOOL        [reduce using rule 121 ($@13)]
    STRING      [reduce using rule 121 ($@13)]
    INT_LIT     [reduce using rule 121 ($@13)]
    FLOAT_LIT   [reduce using rule 121 ($@13)]
    STRING_LIT  [reduce using rule 121 ($@13)]
    BOOL_LIT    [reduce using rule 121 ($@13)]
    IDENT       [reduce using rule 121 ($@13)]
    '('         [reduce using rule 121 ($@13)]
    '+'         [reduce using rule 121 ($@13)]
    '-'         [reduce using rule 121 ($@13)]
    $default    reduce using rule 121 ($@13)

    call_func       go to state 88
    Type            go to state 78
    Expression      go to state 153
    UnaryExpr       go to state 80
    unary_op        go to state 81
    $@13            go to state 82
    PrimaryExpr     go to state 83
    Operand         go to state 84
    Literal         go to state 85
    ConversionExpr  go to state 86


State 96

   92 PrintStmt: PRINTLN '(' . Expression ')'

    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 57
    '('         shift, and go to state 58
    '"'         shift, and go to state 60
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 121 ($@13)]
    FLOAT       [reduce using rule 121 ($@13)]
    BOOL        [reduce using rule 121 ($@13)]
    STRING      [reduce using rule 121 ($@13)]
    INT_LIT     [reduce using rule 121 ($@13)]
    FLOAT_LIT   [reduce using rule 121 ($@13)]
    STRING_LIT  [reduce using rule 121 ($@13)]
    BOOL_LIT    [reduce using rule 121 ($@13)]
    IDENT       [reduce using rule 121 ($@13)]
    '('         [reduce using rule 121 ($@13)]
    '+'         [reduce using rule 121 ($@13)]
    '-'         [reduce using rule 121 ($@13)]
    $default    reduce using rule 121 ($@13)

    call_func       go to state 88
    Type            go to state 78
    Expression      go to state 154
    UnaryExpr       go to state 80
    unary_op        go to state 81
    $@13            go to state 82
    PrimaryExpr     go to state 83
    Operand         go to state 84
    Literal         go to state 85
    ConversionExpr  go to state 86


State 97

   28 ReturnStmt: RETURN HaveReturn .

    $default  reduce using rule 28 (ReturnStmt)


State 98

   29 HaveReturn: Expression .
   98 Expression: Expression . binary_op Expression

    GEQ   shift, and go to state 113
    LOR   shift, and go to state 114
    LAND  shift, and go to state 115
    LEQ   shift, and go to state 116
    EQL   shift, and go to state 117
    NEQ   shift, and go to state 118
    '<'   shift, and go to state 125
    '>'   shift, and go to state 126
    '+'   shift, and go to state 127
    '-'   shift, and go to state 128
    '*'   shift, and go to state 129
    '/'   shift, and go to state 130
    '%'   shift, and go to state 131

    $default  reduce using rule 29 (HaveReturn)

    binary_op  go to state 134
    cmp_op     go to state 135
    add_op     go to state 136
    mul_op     go to state 137


State 99

   42 call_func: IDENT '(' . input_list ')'

    INT_LIT    shift, and go to state 155
    FLOAT_LIT  shift, and go to state 156
    IDENT      shift, and go to state 157
    ','        shift, and go to state 158

    $default  reduce using rule 45 (input_list)

    input_list  go to state 159
    input       go to state 160


State 100

  131 Operand: '(' $@15 . Expression ')'

    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 57
    '('         shift, and go to state 58
    '"'         shift, and go to state 60
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 121 ($@13)]
    FLOAT       [reduce using rule 121 ($@13)]
    BOOL        [reduce using rule 121 ($@13)]
    STRING      [reduce using rule 121 ($@13)]
    INT_LIT     [reduce using rule 121 ($@13)]
    FLOAT_LIT   [reduce using rule 121 ($@13)]
    STRING_LIT  [reduce using rule 121 ($@13)]
    BOOL_LIT    [reduce using rule 121 ($@13)]
    IDENT       [reduce using rule 121 ($@13)]
    '('         [reduce using rule 121 ($@13)]
    '+'         [reduce using rule 121 ($@13)]
    '-'         [reduce using rule 121 ($@13)]
    $default    reduce using rule 121 ($@13)

    call_func       go to state 88
    Type            go to state 78
    Expression      go to state 161
    UnaryExpr       go to state 80
    unary_op        go to state 81
    $@13            go to state 82
    PrimaryExpr     go to state 83
    Operand         go to state 84
    Literal         go to state 85
    ConversionExpr  go to state 86


State 101

   67 Block: '{' $@6 . StatementList '}'

    VAR         shift, and go to state 39
    NEWLINE     shift, and go to state 40
    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IF          shift, and go to state 45
    FOR         shift, and go to state 46
    SWITCH      shift, and go to state 47
    CASE        shift, and go to state 48
    DEFAULT     shift, and go to state 49
    PRINT       shift, and go to state 50
    PRINTLN     shift, and go to state 51
    RETURN      shift, and go to state 52
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 57
    '('         shift, and go to state 58
    '{'         shift, and go to state 59
    '"'         shift, and go to state 60
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 121 ($@13)]
    FLOAT       [reduce using rule 121 ($@13)]
    BOOL        [reduce using rule 121 ($@13)]
    STRING      [reduce using rule 121 ($@13)]
    INT_LIT     [reduce using rule 121 ($@13)]
    FLOAT_LIT   [reduce using rule 121 ($@13)]
    STRING_LIT  [reduce using rule 121 ($@13)]
    BOOL_LIT    [reduce using rule 121 ($@13)]
    IDENT       [reduce using rule 121 ($@13)]
    '('         [reduce using rule 121 ($@13)]
    '+'         [reduce using rule 121 ($@13)]
    '-'         [reduce using rule 121 ($@13)]
    '!'         reduce using rule 121 ($@13)
    $default    reduce using rule 69 (StatementList)

    ReturnStmt       go to state 63
    Statement        go to state 64
    call_func        go to state 65
    DeclarationStmt  go to state 66
    SimpleStmt       go to state 67
    AssignmentStmt   go to state 68
    ExpressionStmt   go to state 69
    IncDecStmt       go to state 70
    Block            go to state 71
    StatementList    go to state 162
    IfStmt           go to state 73
    ForStmt          go to state 74
    SwitchStmt       go to state 75
    CaseStmt         go to state 76
    PrintStmt        go to state 77
    Type             go to state 78
    Expression       go to state 79
    UnaryExpr        go to state 80
    unary_op         go to state 81
    $@13             go to state 82
    PrimaryExpr      go to state 83
    Operand          go to state 84
    Literal          go to state 85
    ConversionExpr   go to state 86


State 102

   99 Expression: '"' STRING_LIT . '"'

    '"'  shift, and go to state 163


State 103

   39 Statement: ReturnStmt NEWLINE .

    $default  reduce using rule 39 (Statement)


State 104

   68 StatementList: Statement StatementList .

    $default  reduce using rule 68 (StatementList)


State 105

   41 Statement: call_func NEWLINE .

    $default  reduce using rule 41 (Statement)


State 106

   31 Statement: DeclarationStmt NEWLINE .

    $default  reduce using rule 31 (Statement)


State 107

   32 Statement: SimpleStmt NEWLINE .

    $default  reduce using rule 32 (Statement)


State 108

   27 FuncBlock: '{' StatementList '}' .

    $default  reduce using rule 27 (FuncBlock)


State 109

   38 Statement: PrintStmt NEWLINE .

    $default  reduce using rule 38 (Statement)


State 110

  136 ConversionExpr: Type '(' . Expression ')'

    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 57
    '('         shift, and go to state 58
    '"'         shift, and go to state 60
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 121 ($@13)]
    FLOAT       [reduce using rule 121 ($@13)]
    BOOL        [reduce using rule 121 ($@13)]
    STRING      [reduce using rule 121 ($@13)]
    INT_LIT     [reduce using rule 121 ($@13)]
    FLOAT_LIT   [reduce using rule 121 ($@13)]
    STRING_LIT  [reduce using rule 121 ($@13)]
    BOOL_LIT    [reduce using rule 121 ($@13)]
    IDENT       [reduce using rule 121 ($@13)]
    '('         [reduce using rule 121 ($@13)]
    '+'         [reduce using rule 121 ($@13)]
    '-'         [reduce using rule 121 ($@13)]
    $default    reduce using rule 121 ($@13)

    call_func       go to state 88
    Type            go to state 78
    Expression      go to state 164
    UnaryExpr       go to state 80
    unary_op        go to state 81
    $@13            go to state 82
    PrimaryExpr     go to state 83
    Operand         go to state 84
    Literal         go to state 85
    ConversionExpr  go to state 86


State 111

   64 INC_DEC: INC .

    $default  reduce using rule 64 (INC_DEC)


State 112

   65 INC_DEC: DEC .

    $default  reduce using rule 65 (INC_DEC)


State 113

  113 cmp_op: GEQ .

    $default  reduce using rule 113 (cmp_op)


State 114

  103 binary_op: LOR .

    $default  reduce using rule 103 (binary_op)


State 115

  104 binary_op: LAND .

    $default  reduce using rule 104 (binary_op)


State 116

  111 cmp_op: LEQ .

    $default  reduce using rule 111 (cmp_op)


State 117

  108 cmp_op: EQL .

    $default  reduce using rule 108 (cmp_op)


State 118

  109 cmp_op: NEQ .

    $default  reduce using rule 109 (cmp_op)


State 119

   57 assign_op: ADD_ASSIGN .

    $default  reduce using rule 57 (assign_op)


State 120

   58 assign_op: SUB_ASSIGN .

    $default  reduce using rule 58 (assign_op)


State 121

   59 assign_op: MUL_ASSIGN .

    $default  reduce using rule 59 (assign_op)


State 122

   60 assign_op: QUO_ASSIGN .

    $default  reduce using rule 60 (assign_op)


State 123

   61 assign_op: REM_ASSIGN .

    $default  reduce using rule 61 (assign_op)


State 124

   56 assign_op: '=' .

    $default  reduce using rule 56 (assign_op)


State 125

  110 cmp_op: '<' .

    $default  reduce using rule 110 (cmp_op)


State 126

  112 cmp_op: '>' .

    $default  reduce using rule 112 (cmp_op)


State 127

  114 add_op: '+' .

    $default  reduce using rule 114 (add_op)


State 128

  115 add_op: '-' .

    $default  reduce using rule 115 (add_op)


State 129

  116 mul_op: '*' .

    $default  reduce using rule 116 (mul_op)


State 130

  117 mul_op: '/' .

    $default  reduce using rule 117 (mul_op)


State 131

  118 mul_op: '%' .

    $default  reduce using rule 118 (mul_op)


State 132

   55 AssignmentStmt: Expression assign_op . Expression

    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 57
    '('         shift, and go to state 58
    '"'         shift, and go to state 60
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 121 ($@13)]
    FLOAT       [reduce using rule 121 ($@13)]
    BOOL        [reduce using rule 121 ($@13)]
    STRING      [reduce using rule 121 ($@13)]
    INT_LIT     [reduce using rule 121 ($@13)]
    FLOAT_LIT   [reduce using rule 121 ($@13)]
    STRING_LIT  [reduce using rule 121 ($@13)]
    BOOL_LIT    [reduce using rule 121 ($@13)]
    IDENT       [reduce using rule 121 ($@13)]
    '('         [reduce using rule 121 ($@13)]
    '+'         [reduce using rule 121 ($@13)]
    '-'         [reduce using rule 121 ($@13)]
    $default    reduce using rule 121 ($@13)

    call_func       go to state 88
    Type            go to state 78
    Expression      go to state 165
    UnaryExpr       go to state 80
    unary_op        go to state 81
    $@13            go to state 82
    PrimaryExpr     go to state 83
    Operand         go to state 84
    Literal         go to state 85
    ConversionExpr  go to state 86


State 133

   63 IncDecStmt: Expression INC_DEC .

    $default  reduce using rule 63 (IncDecStmt)


State 134

   98 Expression: Expression binary_op . Expression

    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 57
    '('         shift, and go to state 58
    '"'         shift, and go to state 60
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 121 ($@13)]
    FLOAT       [reduce using rule 121 ($@13)]
    BOOL        [reduce using rule 121 ($@13)]
    STRING      [reduce using rule 121 ($@13)]
    INT_LIT     [reduce using rule 121 ($@13)]
    FLOAT_LIT   [reduce using rule 121 ($@13)]
    STRING_LIT  [reduce using rule 121 ($@13)]
    BOOL_LIT    [reduce using rule 121 ($@13)]
    IDENT       [reduce using rule 121 ($@13)]
    '('         [reduce using rule 121 ($@13)]
    '+'         [reduce using rule 121 ($@13)]
    '-'         [reduce using rule 121 ($@13)]
    $default    reduce using rule 121 ($@13)

    call_func       go to state 88
    Type            go to state 78
    Expression      go to state 166
    UnaryExpr       go to state 80
    unary_op        go to state 81
    $@13            go to state 82
    PrimaryExpr     go to state 83
    Operand         go to state 84
    Literal         go to state 85
    ConversionExpr  go to state 86


State 135

  105 binary_op: cmp_op .

    $default  reduce using rule 105 (binary_op)


State 136

  106 binary_op: add_op .

    $default  reduce using rule 106 (binary_op)


State 137

  107 binary_op: mul_op .

    $default  reduce using rule 107 (binary_op)


State 138

  129 Operand: IDENT .

    $default  reduce using rule 129 (Operand)


State 139

  102 UnaryExpr: unary_op UnaryExpr .

    $default  reduce using rule 102 (UnaryExpr)


State 140

  124 Dup_Not: '!' . $@14 Dup_Not

    $default  reduce using rule 123 ($@14)

    $@14  go to state 167


State 141

  122 unary_op: $@13 Dup_Not .

    $default  reduce using rule 122 (unary_op)


State 142

   49 DeclarationStmt: VAR IDENT Type . Assign_ornot

    '='  shift, and go to state 168

    $default  reduce using rule 51 (Assign_ornot)

    Assign_ornot  go to state 169


State 143

   71 IfStmt: IF Condition $@7 . Block If_Else

    '{'  shift, and go to state 59

    Block  go to state 170


State 144

   83 InitStmt: SimpleStmt .

    $default  reduce using rule 83 (InitStmt)


State 145

   80 ForType: Condition . $@9 Block

    $default  reduce using rule 79 ($@9)

    $@9  go to state 171


State 146

   78 ForStmt: FOR $@8 ForType .

    $default  reduce using rule 78 (ForStmt)


State 147

   81 ForType: ForClause . Block

    '{'  shift, and go to state 59

    Block  go to state 172


State 148

   82 ForClause: InitStmt . ';' Condition ';' PostStmt

    ';'  shift, and go to state 173


State 149

   55 AssignmentStmt: Expression . assign_op Expression
   62 ExpressionStmt: Expression .
   63 IncDecStmt: Expression . INC_DEC
   76 Condition: Expression .
   98 Expression: Expression . binary_op Expression

    INC         shift, and go to state 111
    DEC         shift, and go to state 112
    GEQ         shift, and go to state 113
    LOR         shift, and go to state 114
    LAND        shift, and go to state 115
    LEQ         shift, and go to state 116
    EQL         shift, and go to state 117
    NEQ         shift, and go to state 118
    ADD_ASSIGN  shift, and go to state 119
    SUB_ASSIGN  shift, and go to state 120
    MUL_ASSIGN  shift, and go to state 121
    QUO_ASSIGN  shift, and go to state 122
    REM_ASSIGN  shift, and go to state 123
    '='         shift, and go to state 124
    '<'         shift, and go to state 125
    '>'         shift, and go to state 126
    '+'         shift, and go to state 127
    '-'         shift, and go to state 128
    '*'         shift, and go to state 129
    '/'         shift, and go to state 130
    '%'         shift, and go to state 131

    '{'       reduce using rule 76 (Condition)
    $default  reduce using rule 62 (ExpressionStmt)

    assign_op  go to state 132
    INC_DEC    go to state 133
    binary_op  go to state 134
    cmp_op     go to state 135
    add_op     go to state 136
    mul_op     go to state 137


State 150

   86 SwitchStmt: SWITCH Expression $@10 . Block

    '{'  shift, and go to state 59

    Block  go to state 174


State 151

   88 CaseStmt: CASE INT_LIT $@11 . ':' Block

    ':'  shift, and go to state 175


State 152

   90 CaseStmt: DEFAULT $@12 ':' . Block

    '{'  shift, and go to state 59

    Block  go to state 176


State 153

   91 PrintStmt: PRINT '(' Expression . ')'
   98 Expression: Expression . binary_op Expression

    GEQ   shift, and go to state 113
    LOR   shift, and go to state 114
    LAND  shift, and go to state 115
    LEQ   shift, and go to state 116
    EQL   shift, and go to state 117
    NEQ   shift, and go to state 118
    ')'   shift, and go to state 177
    '<'   shift, and go to state 125
    '>'   shift, and go to state 126
    '+'   shift, and go to state 127
    '-'   shift, and go to state 128
    '*'   shift, and go to state 129
    '/'   shift, and go to state 130
    '%'   shift, and go to state 131

    binary_op  go to state 134
    cmp_op     go to state 135
    add_op     go to state 136
    mul_op     go to state 137


State 154

   92 PrintStmt: PRINTLN '(' Expression . ')'
   98 Expression: Expression . binary_op Expression

    GEQ   shift, and go to state 113
    LOR   shift, and go to state 114
    LAND  shift, and go to state 115
    LEQ   shift, and go to state 116
    EQL   shift, and go to state 117
    NEQ   shift, and go to state 118
    ')'   shift, and go to state 178
    '<'   shift, and go to state 125
    '>'   shift, and go to state 126
    '+'   shift, and go to state 127
    '-'   shift, and go to state 128
    '*'   shift, and go to state 129
    '/'   shift, and go to state 130
    '%'   shift, and go to state 131

    binary_op  go to state 134
    cmp_op     go to state 135
    add_op     go to state 136
    mul_op     go to state 137


State 155

   47 input: INT_LIT .

    $default  reduce using rule 47 (input)


State 156

   48 input: FLOAT_LIT .

    $default  reduce using rule 48 (input)


State 157

   46 input: IDENT .

    $default  reduce using rule 46 (input)


State 158

   44 input_list: ',' . input_list

    INT_LIT    shift, and go to state 155
    FLOAT_LIT  shift, and go to state 156
    IDENT      shift, and go to state 157
    ','        shift, and go to state 158

    $default  reduce using rule 45 (input_list)

    input_list  go to state 179
    input       go to state 160


State 159

   42 call_func: IDENT '(' input_list . ')'

    ')'  shift, and go to state 180


State 160

   43 input_list: input . input_list

    INT_LIT    shift, and go to state 155
    FLOAT_LIT  shift, and go to state 156
    IDENT      shift, and go to state 157
    ','        shift, and go to state 158

    $default  reduce using rule 45 (input_list)

    input_list  go to state 181
    input       go to state 160


State 161

   98 Expression: Expression . binary_op Expression
  131 Operand: '(' $@15 Expression . ')'

    GEQ   shift, and go to state 113
    LOR   shift, and go to state 114
    LAND  shift, and go to state 115
    LEQ   shift, and go to state 116
    EQL   shift, and go to state 117
    NEQ   shift, and go to state 118
    ')'   shift, and go to state 182
    '<'   shift, and go to state 125
    '>'   shift, and go to state 126
    '+'   shift, and go to state 127
    '-'   shift, and go to state 128
    '*'   shift, and go to state 129
    '/'   shift, and go to state 130
    '%'   shift, and go to state 131

    binary_op  go to state 134
    cmp_op     go to state 135
    add_op     go to state 136
    mul_op     go to state 137


State 162

   67 Block: '{' $@6 StatementList . '}'

    '}'  shift, and go to state 183


State 163

   99 Expression: '"' STRING_LIT '"' .

    $default  reduce using rule 99 (Expression)


State 164

   98 Expression: Expression . binary_op Expression
  136 ConversionExpr: Type '(' Expression . ')'

    GEQ   shift, and go to state 113
    LOR   shift, and go to state 114
    LAND  shift, and go to state 115
    LEQ   shift, and go to state 116
    EQL   shift, and go to state 117
    NEQ   shift, and go to state 118
    ')'   shift, and go to state 184
    '<'   shift, and go to state 125
    '>'   shift, and go to state 126
    '+'   shift, and go to state 127
    '-'   shift, and go to state 128
    '*'   shift, and go to state 129
    '/'   shift, and go to state 130
    '%'   shift, and go to state 131

    binary_op  go to state 134
    cmp_op     go to state 135
    add_op     go to state 136
    mul_op     go to state 137


State 165

   55 AssignmentStmt: Expression assign_op Expression .
   98 Expression: Expression . binary_op Expression

    GEQ   shift, and go to state 113
    LOR   shift, and go to state 114
    LAND  shift, and go to state 115
    LEQ   shift, and go to state 116
    EQL   shift, and go to state 117
    NEQ   shift, and go to state 118
    '<'   shift, and go to state 125
    '>'   shift, and go to state 126
    '+'   shift, and go to state 127
    '-'   shift, and go to state 128
    '*'   shift, and go to state 129
    '/'   shift, and go to state 130
    '%'   shift, and go to state 131

    $default  reduce using rule 55 (AssignmentStmt)

    binary_op  go to state 134
    cmp_op     go to state 135
    add_op     go to state 136
    mul_op     go to state 137


State 166

   98 Expression: Expression . binary_op Expression
   98           | Expression binary_op Expression .

    GEQ   shift, and go to state 113
    LOR   shift, and go to state 114
    LAND  shift, and go to state 115
    LEQ   shift, and go to state 116
    EQL   shift, and go to state 117
    NEQ   shift, and go to state 118
    '<'   shift, and go to state 125
    '>'   shift, and go to state 126
    '+'   shift, and go to state 127
    '-'   shift, and go to state 128
    '*'   shift, and go to state 129
    '/'   shift, and go to state 130
    '%'   shift, and go to state 131

    GEQ       [reduce using rule 98 (Expression)]
    LOR       [reduce using rule 98 (Expression)]
    LAND      [reduce using rule 98 (Expression)]
    LEQ       [reduce using rule 98 (Expression)]
    EQL       [reduce using rule 98 (Expression)]
    NEQ       [reduce using rule 98 (Expression)]
    '<'       [reduce using rule 98 (Expression)]
    '>'       [reduce using rule 98 (Expression)]
    '+'       [reduce using rule 98 (Expression)]
    '-'       [reduce using rule 98 (Expression)]
    '*'       [reduce using rule 98 (Expression)]
    '/'       [reduce using rule 98 (Expression)]
    '%'       [reduce using rule 98 (Expression)]
    $default  reduce using rule 98 (Expression)

    binary_op  go to state 134
    cmp_op     go to state 135
    add_op     go to state 136
    mul_op     go to state 137


State 167

  124 Dup_Not: '!' $@14 . Dup_Not

    '!'  shift, and go to state 140

    '!'       [reduce using rule 125 (Dup_Not)]
    $default  reduce using rule 125 (Dup_Not)

    Dup_Not  go to state 185


State 168

   50 Assign_ornot: '=' . Expression

    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 57
    '('         shift, and go to state 58
    '"'         shift, and go to state 60
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 121 ($@13)]
    FLOAT       [reduce using rule 121 ($@13)]
    BOOL        [reduce using rule 121 ($@13)]
    STRING      [reduce using rule 121 ($@13)]
    INT_LIT     [reduce using rule 121 ($@13)]
    FLOAT_LIT   [reduce using rule 121 ($@13)]
    STRING_LIT  [reduce using rule 121 ($@13)]
    BOOL_LIT    [reduce using rule 121 ($@13)]
    IDENT       [reduce using rule 121 ($@13)]
    '('         [reduce using rule 121 ($@13)]
    '+'         [reduce using rule 121 ($@13)]
    '-'         [reduce using rule 121 ($@13)]
    $default    reduce using rule 121 ($@13)

    call_func       go to state 88
    Type            go to state 78
    Expression      go to state 186
    UnaryExpr       go to state 80
    unary_op        go to state 81
    $@13            go to state 82
    PrimaryExpr     go to state 83
    Operand         go to state 84
    Literal         go to state 85
    ConversionExpr  go to state 86


State 169

   49 DeclarationStmt: VAR IDENT Type Assign_ornot .

    $default  reduce using rule 49 (DeclarationStmt)


State 170

   71 IfStmt: IF Condition $@7 Block . If_Else

    ELSE  shift, and go to state 187

    $default  reduce using rule 73 (If_Else)

    If_Else  go to state 188


State 171

   80 ForType: Condition $@9 . Block

    '{'  shift, and go to state 59

    Block  go to state 189


State 172

   81 ForType: ForClause Block .

    $default  reduce using rule 81 (ForType)


State 173

   82 ForClause: InitStmt ';' . Condition ';' PostStmt

    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 57
    '('         shift, and go to state 58
    '"'         shift, and go to state 60
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 121 ($@13)]
    FLOAT       [reduce using rule 121 ($@13)]
    BOOL        [reduce using rule 121 ($@13)]
    STRING      [reduce using rule 121 ($@13)]
    INT_LIT     [reduce using rule 121 ($@13)]
    FLOAT_LIT   [reduce using rule 121 ($@13)]
    STRING_LIT  [reduce using rule 121 ($@13)]
    BOOL_LIT    [reduce using rule 121 ($@13)]
    IDENT       [reduce using rule 121 ($@13)]
    '('         [reduce using rule 121 ($@13)]
    '+'         [reduce using rule 121 ($@13)]
    '-'         [reduce using rule 121 ($@13)]
    $default    reduce using rule 121 ($@13)

    call_func       go to state 88
    Condition       go to state 190
    Type            go to state 78
    Expression      go to state 90
    UnaryExpr       go to state 80
    unary_op        go to state 81
    $@13            go to state 82
    PrimaryExpr     go to state 83
    Operand         go to state 84
    Literal         go to state 85
    ConversionExpr  go to state 86


State 174

   86 SwitchStmt: SWITCH Expression $@10 Block .

    $default  reduce using rule 86 (SwitchStmt)


State 175

   88 CaseStmt: CASE INT_LIT $@11 ':' . Block

    '{'  shift, and go to state 59

    Block  go to state 191


State 176

   90 CaseStmt: DEFAULT $@12 ':' Block .

    $default  reduce using rule 90 (CaseStmt)


State 177

   91 PrintStmt: PRINT '(' Expression ')' .

    $default  reduce using rule 91 (PrintStmt)


State 178

   92 PrintStmt: PRINTLN '(' Expression ')' .

    $default  reduce using rule 92 (PrintStmt)


State 179

   44 input_list: ',' input_list .

    $default  reduce using rule 44 (input_list)


State 180

   42 call_func: IDENT '(' input_list ')' .

    $default  reduce using rule 42 (call_func)


State 181

   43 input_list: input input_list .

    $default  reduce using rule 43 (input_list)


State 182

  131 Operand: '(' $@15 Expression ')' .

    $default  reduce using rule 131 (Operand)


State 183

   67 Block: '{' $@6 StatementList '}' .

    $default  reduce using rule 67 (Block)


State 184

  136 ConversionExpr: Type '(' Expression ')' .

    $default  reduce using rule 136 (ConversionExpr)


State 185

  124 Dup_Not: '!' $@14 Dup_Not .

    $default  reduce using rule 124 (Dup_Not)


State 186

   50 Assign_ornot: '=' Expression .
   98 Expression: Expression . binary_op Expression

    GEQ   shift, and go to state 113
    LOR   shift, and go to state 114
    LAND  shift, and go to state 115
    LEQ   shift, and go to state 116
    EQL   shift, and go to state 117
    NEQ   shift, and go to state 118
    '<'   shift, and go to state 125
    '>'   shift, and go to state 126
    '+'   shift, and go to state 127
    '-'   shift, and go to state 128
    '*'   shift, and go to state 129
    '/'   shift, and go to state 130
    '%'   shift, and go to state 131

    $default  reduce using rule 50 (Assign_ornot)

    binary_op  go to state 134
    cmp_op     go to state 135
    add_op     go to state 136
    mul_op     go to state 137


State 187

   72 If_Else: ELSE . If_Block

    IF   shift, and go to state 45
    '{'  shift, and go to state 59

    Block     go to state 192
    IfStmt    go to state 193
    If_Block  go to state 194


State 188

   71 IfStmt: IF Condition $@7 Block If_Else .

    $default  reduce using rule 71 (IfStmt)


State 189

   80 ForType: Condition $@9 Block .

    $default  reduce using rule 80 (ForType)


State 190

   82 ForClause: InitStmt ';' Condition . ';' PostStmt

    ';'  shift, and go to state 195


State 191

   88 CaseStmt: CASE INT_LIT $@11 ':' Block .

    $default  reduce using rule 88 (CaseStmt)


State 192

   75 If_Block: Block .

    $default  reduce using rule 75 (If_Block)


State 193

   74 If_Block: IfStmt .

    $default  reduce using rule 74 (If_Block)


State 194

   72 If_Else: ELSE If_Block .

    $default  reduce using rule 72 (If_Else)


State 195

   82 ForClause: InitStmt ';' Condition ';' . PostStmt

    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 57
    '('         shift, and go to state 58
    '"'         shift, and go to state 60
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 121 ($@13)]
    FLOAT       [reduce using rule 121 ($@13)]
    BOOL        [reduce using rule 121 ($@13)]
    STRING      [reduce using rule 121 ($@13)]
    INT_LIT     [reduce using rule 121 ($@13)]
    FLOAT_LIT   [reduce using rule 121 ($@13)]
    STRING_LIT  [reduce using rule 121 ($@13)]
    BOOL_LIT    [reduce using rule 121 ($@13)]
    IDENT       [reduce using rule 121 ($@13)]
    '('         [reduce using rule 121 ($@13)]
    '+'         [reduce using rule 121 ($@13)]
    '-'         [reduce using rule 121 ($@13)]
    $default    reduce using rule 121 ($@13)

    call_func       go to state 88
    SimpleStmt      go to state 196
    AssignmentStmt  go to state 68
    ExpressionStmt  go to state 69
    IncDecStmt      go to state 70
    PostStmt        go to state 197
    Type            go to state 78
    Expression      go to state 79
    UnaryExpr       go to state 80
    unary_op        go to state 81
    $@13            go to state 82
    PrimaryExpr     go to state 83
    Operand         go to state 84
    Literal         go to state 85
    ConversionExpr  go to state 86


State 196

   84 PostStmt: SimpleStmt .

    $default  reduce using rule 84 (PostStmt)


State 197

   82 ForClause: InitStmt ';' Condition ';' PostStmt .

    $default  reduce using rule 82 (ForClause)
