Terminals unused in grammar

    TRUE
    FALSE


State 37 conflicts: 12 shift/reduce
State 45 conflicts: 12 shift/reduce
State 46 conflicts: 12 shift/reduce
State 47 conflicts: 12 shift/reduce
State 52 conflicts: 12 shift/reduce
State 64 conflicts: 12 shift/reduce
State 65 conflicts: 1 shift/reduce
State 81 conflicts: 12 shift/reduce
State 82 conflicts: 1 shift/reduce
State 99 conflicts: 12 shift/reduce
State 100 conflicts: 12 shift/reduce
State 104 conflicts: 12 shift/reduce
State 105 conflicts: 12 shift/reduce
State 114 conflicts: 12 shift/reduce
State 136 conflicts: 12 shift/reduce
State 138 conflicts: 12 shift/reduce
State 150 conflicts: 12 shift/reduce
State 167 conflicts: 13 shift/reduce
State 168 conflicts: 1 shift/reduce
State 169 conflicts: 12 shift/reduce
State 187 conflicts: 12 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: GlobalStatementList

    2 GlobalStatementList: GlobalStatementList GlobalStatement
    3                    | GlobalStatement

    4 GlobalStatement: PackageStmt NEWLINE
    5                | FunctionDeclStmt
    6                | NEWLINE

    7 $@1: %empty

    8 PackageStmt: PACKAGE IDENT $@1

    9 $@2: %empty

   10 $@3: %empty

   11 $@4: %empty

   12 FunctionDeclStmt: FuncOpen $@2 '(' ParameterList ')' $@3 ReturnType $@4 FuncBlock

   13 FuncOpen: FUNC IDENT

   14 $@5: %empty

   15 ParameterList: IDENT ParamType $@5 ParameterList
   16              | ',' ParameterList
   17              | %empty

   18 ParamType: INT
   19          | FLOAT
   20          | STRING
   21          | BOOL

   22 ReturnType: INT
   23           | FLOAT
   24           | STRING
   25           | BOOL
   26           | %empty

   27 FuncBlock: '{' StatementList '}'

   28 ReturnStmt: RETURN HaveReturn

   29 HaveReturn: Expression
   30           | %empty

   31 Statement: DeclarationStmt NEWLINE
   32          | SimpleStmt NEWLINE
   33          | Block
   34          | IfStmt
   35          | ForStmt
   36          | SwitchStmt
   37          | CaseStmt
   38          | PrintStmt NEWLINE
   39          | ReturnStmt NEWLINE
   40          | NEWLINE
   41          | call_func NEWLINE

   42 call_func: IDENT '(' input_list ')'

   43 input_list: input input_list
   44           | ',' input_list
   45           | %empty

   46 input: IDENT
   47      | INT_LIT
   48      | FLOAT_LIT

   49 DeclarationStmt: VAR IDENT Type Assign_ornot

   50 Assign_ornot: '=' Expression
   51             | %empty

   52 SimpleStmt: AssignmentStmt
   53           | ExpressionStmt
   54           | IncDecStmt

   55 AssignmentStmt: Expression assign_op Expression

   56 assign_op: '='
   57          | ADD_ASSIGN
   58          | SUB_ASSIGN
   59          | MUL_ASSIGN
   60          | QUO_ASSIGN
   61          | REM_ASSIGN

   62 ExpressionStmt: Expression

   63 IncDecStmt: Expression INC_DEC

   64 INC_DEC: INC
   65        | DEC

   66 $@6: %empty

   67 Block: '{' $@6 StatementList '}'

   68 StatementList: Statement StatementList
   69              | %empty

   70 $@7: %empty

   71 IfStmt: IF Condition $@7 Block If_Else

   72 If_Else: ELSE If_Block
   73        | %empty

   74 If_Block: IfStmt
   75         | Block

   76 Condition: Expression

   77 $@8: %empty

   78 ForStmt: FOR Condition $@8 Block
   79        | FOR ForClause Block

   80 ForClause: InitStmt ';' Condition ';' PostStmt

   81 InitStmt: SimpleStmt

   82 PostStmt: SimpleStmt

   83 SwitchStmt: SWITCH Expression Block

   84 $@9: %empty

   85 CaseStmt: CASE INT_LIT $@9 ':' Block
   86         | DEFAULT ':' Block

   87 PrintStmt: PRINT '(' Expression ')'
   88          | PRINTLN '(' Expression ')'

   89 Type: INT
   90     | FLOAT
   91     | STRING
   92     | BOOL

   93 Expression: UnaryExpr
   94           | Expression binary_op Expression
   95           | '"' STRING_LIT '"'
   96           | call_func

   97 UnaryExpr: PrimaryExpr
   98          | unary_op UnaryExpr

   99 binary_op: LOR
  100          | LAND
  101          | cmp_op
  102          | add_op
  103          | mul_op

  104 cmp_op: EQL
  105       | NEQ
  106       | '<'
  107       | LEQ
  108       | '>'
  109       | GEQ

  110 add_op: '+'
  111       | '-'

  112 mul_op: '*'
  113       | '/'
  114       | '%'

  115 unary_op: '+'
  116         | '-'

  117 $@10: %empty

  118 unary_op: $@10 Dup_Not

  119 $@11: %empty

  120 Dup_Not: '!' $@11 Dup_Not
  121        | %empty

  122 PrimaryExpr: Operand
  123            | ConversionExpr

  124 Operand: Literal
  125        | IDENT

  126 $@12: %empty

  127 Operand: '(' $@12 Expression ')'

  128 Literal: INT_LIT
  129        | FLOAT_LIT
  130        | BOOL_LIT
  131        | STRING_LIT

  132 ConversionExpr: Type '(' Expression ')'


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 120
    '"' (34) 95
    '%' (37) 114
    '(' (40) 12 42 87 88 127 132
    ')' (41) 12 42 87 88 127 132
    '*' (42) 112
    '+' (43) 110 115
    ',' (44) 16 44
    '-' (45) 111 116
    '/' (47) 113
    ':' (58) 85 86
    ';' (59) 80
    '<' (60) 106
    '=' (61) 50 56
    '>' (62) 108
    '{' (123) 27 67
    '}' (125) 27 67
    error (256)
    VAR (258) 49
    NEWLINE (259) 4 6 31 32 38 39 40 41
    INT (260) 18 22 89
    FLOAT (261) 19 23 90
    BOOL (262) 21 25 92
    STRING (263) 20 24 91
    TRUE (264)
    FALSE (265)
    INC (266) 64
    DEC (267) 65
    GEQ (268) 109
    LOR (269) 99
    LAND (270) 100
    LEQ (271) 107
    EQL (272) 104
    NEQ (273) 105
    ADD_ASSIGN (274) 57
    SUB_ASSIGN (275) 58
    MUL_ASSIGN (276) 59
    QUO_ASSIGN (277) 60
    REM_ASSIGN (278) 61
    IF (279) 71
    ELSE (280) 72
    FOR (281) 78 79
    SWITCH (282) 83
    CASE (283) 85
    DEFAULT (284) 86
    PRINT (285) 87
    PRINTLN (286) 88
    PACKAGE (287) 8
    FUNC (288) 13
    RETURN (289) 28
    INT_LIT <i_val> (290) 47 85 128
    FLOAT_LIT <f_val> (291) 48 129
    STRING_LIT <s_val> (292) 95 131
    BOOL_LIT <b_val> (293) 130
    IDENT <s_val> (294) 8 13 15 42 46 49 125


Nonterminals, with rules where they appear

    $accept (57)
        on left: 0
    Program (58)
        on left: 1
        on right: 0
    GlobalStatementList (59)
        on left: 2 3
        on right: 1 2
    GlobalStatement (60)
        on left: 4 5 6
        on right: 2 3
    PackageStmt (61)
        on left: 8
        on right: 4
    $@1 (62)
        on left: 7
        on right: 8
    FunctionDeclStmt (63)
        on left: 12
        on right: 5
    $@2 (64)
        on left: 9
        on right: 12
    $@3 (65)
        on left: 10
        on right: 12
    $@4 (66)
        on left: 11
        on right: 12
    FuncOpen (67)
        on left: 13
        on right: 12
    ParameterList (68)
        on left: 15 16 17
        on right: 12 15 16
    $@5 (69)
        on left: 14
        on right: 15
    ParamType (70)
        on left: 18 19 20 21
        on right: 15
    ReturnType (71)
        on left: 22 23 24 25 26
        on right: 12
    FuncBlock (72)
        on left: 27
        on right: 12
    ReturnStmt (73)
        on left: 28
        on right: 39
    HaveReturn (74)
        on left: 29 30
        on right: 28
    Statement (75)
        on left: 31 32 33 34 35 36 37 38 39 40 41
        on right: 68
    call_func (76)
        on left: 42
        on right: 41 96
    input_list (77)
        on left: 43 44 45
        on right: 42 43 44
    input (78)
        on left: 46 47 48
        on right: 43
    DeclarationStmt (79)
        on left: 49
        on right: 31
    Assign_ornot (80)
        on left: 50 51
        on right: 49
    SimpleStmt (81)
        on left: 52 53 54
        on right: 32 81 82
    AssignmentStmt (82)
        on left: 55
        on right: 52
    assign_op (83)
        on left: 56 57 58 59 60 61
        on right: 55
    ExpressionStmt (84)
        on left: 62
        on right: 53
    IncDecStmt (85)
        on left: 63
        on right: 54
    INC_DEC (86)
        on left: 64 65
        on right: 63
    Block (87)
        on left: 67
        on right: 33 71 75 78 79 83 85 86
    $@6 (88)
        on left: 66
        on right: 67
    StatementList (89)
        on left: 68 69
        on right: 27 67 68
    IfStmt (90)
        on left: 71
        on right: 34 74
    $@7 (91)
        on left: 70
        on right: 71
    If_Else (92)
        on left: 72 73
        on right: 71
    If_Block (93)
        on left: 74 75
        on right: 72
    Condition (94)
        on left: 76
        on right: 71 78 80
    ForStmt (95)
        on left: 78 79
        on right: 35
    $@8 (96)
        on left: 77
        on right: 78
    ForClause (97)
        on left: 80
        on right: 79
    InitStmt (98)
        on left: 81
        on right: 80
    PostStmt (99)
        on left: 82
        on right: 80
    SwitchStmt (100)
        on left: 83
        on right: 36
    CaseStmt (101)
        on left: 85 86
        on right: 37
    $@9 (102)
        on left: 84
        on right: 85
    PrintStmt (103)
        on left: 87 88
        on right: 38
    Type (104)
        on left: 89 90 91 92
        on right: 49 132
    Expression (105)
        on left: 93 94 95 96
        on right: 29 50 55 62 63 76 83 87 88 94 127 132
    UnaryExpr (106)
        on left: 97 98
        on right: 93 98
    binary_op (107)
        on left: 99 100 101 102 103
        on right: 94
    cmp_op (108)
        on left: 104 105 106 107 108 109
        on right: 101
    add_op (109)
        on left: 110 111
        on right: 102
    mul_op (110)
        on left: 112 113 114
        on right: 103
    unary_op (111)
        on left: 115 116 118
        on right: 98
    $@10 (112)
        on left: 117
        on right: 118
    Dup_Not (113)
        on left: 120 121
        on right: 118 120
    $@11 (114)
        on left: 119
        on right: 120
    PrimaryExpr (115)
        on left: 122 123
        on right: 97
    Operand (116)
        on left: 124 125 127
        on right: 122
    $@12 (117)
        on left: 126
        on right: 127
    Literal (118)
        on left: 128 129 130 131
        on right: 124
    ConversionExpr (119)
        on left: 132
        on right: 123


State 0

    0 $accept: . Program $end

    NEWLINE  shift, and go to state 1
    PACKAGE  shift, and go to state 2
    FUNC     shift, and go to state 3

    Program              go to state 4
    GlobalStatementList  go to state 5
    GlobalStatement      go to state 6
    PackageStmt          go to state 7
    FunctionDeclStmt     go to state 8
    FuncOpen             go to state 9


State 1

    6 GlobalStatement: NEWLINE .

    $default  reduce using rule 6 (GlobalStatement)


State 2

    8 PackageStmt: PACKAGE . IDENT $@1

    IDENT  shift, and go to state 10


State 3

   13 FuncOpen: FUNC . IDENT

    IDENT  shift, and go to state 11


State 4

    0 $accept: Program . $end

    $end  shift, and go to state 12


State 5

    1 Program: GlobalStatementList .
    2 GlobalStatementList: GlobalStatementList . GlobalStatement

    NEWLINE  shift, and go to state 1
    PACKAGE  shift, and go to state 2
    FUNC     shift, and go to state 3

    $default  reduce using rule 1 (Program)

    GlobalStatement   go to state 13
    PackageStmt       go to state 7
    FunctionDeclStmt  go to state 8
    FuncOpen          go to state 9


State 6

    3 GlobalStatementList: GlobalStatement .

    $default  reduce using rule 3 (GlobalStatementList)


State 7

    4 GlobalStatement: PackageStmt . NEWLINE

    NEWLINE  shift, and go to state 14


State 8

    5 GlobalStatement: FunctionDeclStmt .

    $default  reduce using rule 5 (GlobalStatement)


State 9

   12 FunctionDeclStmt: FuncOpen . $@2 '(' ParameterList ')' $@3 ReturnType $@4 FuncBlock

    $default  reduce using rule 9 ($@2)

    $@2  go to state 15


State 10

    8 PackageStmt: PACKAGE IDENT . $@1

    $default  reduce using rule 7 ($@1)

    $@1  go to state 16


State 11

   13 FuncOpen: FUNC IDENT .

    $default  reduce using rule 13 (FuncOpen)


State 12

    0 $accept: Program $end .

    $default  accept


State 13

    2 GlobalStatementList: GlobalStatementList GlobalStatement .

    $default  reduce using rule 2 (GlobalStatementList)


State 14

    4 GlobalStatement: PackageStmt NEWLINE .

    $default  reduce using rule 4 (GlobalStatement)


State 15

   12 FunctionDeclStmt: FuncOpen $@2 . '(' ParameterList ')' $@3 ReturnType $@4 FuncBlock

    '('  shift, and go to state 17


State 16

    8 PackageStmt: PACKAGE IDENT $@1 .

    $default  reduce using rule 8 (PackageStmt)


State 17

   12 FunctionDeclStmt: FuncOpen $@2 '(' . ParameterList ')' $@3 ReturnType $@4 FuncBlock

    IDENT  shift, and go to state 18
    ','    shift, and go to state 19

    $default  reduce using rule 17 (ParameterList)

    ParameterList  go to state 20


State 18

   15 ParameterList: IDENT . ParamType $@5 ParameterList

    INT     shift, and go to state 21
    FLOAT   shift, and go to state 22
    BOOL    shift, and go to state 23
    STRING  shift, and go to state 24

    ParamType  go to state 25


State 19

   16 ParameterList: ',' . ParameterList

    IDENT  shift, and go to state 18
    ','    shift, and go to state 19

    $default  reduce using rule 17 (ParameterList)

    ParameterList  go to state 26


State 20

   12 FunctionDeclStmt: FuncOpen $@2 '(' ParameterList . ')' $@3 ReturnType $@4 FuncBlock

    ')'  shift, and go to state 27


State 21

   18 ParamType: INT .

    $default  reduce using rule 18 (ParamType)


State 22

   19 ParamType: FLOAT .

    $default  reduce using rule 19 (ParamType)


State 23

   21 ParamType: BOOL .

    $default  reduce using rule 21 (ParamType)


State 24

   20 ParamType: STRING .

    $default  reduce using rule 20 (ParamType)


State 25

   15 ParameterList: IDENT ParamType . $@5 ParameterList

    $default  reduce using rule 14 ($@5)

    $@5  go to state 28


State 26

   16 ParameterList: ',' ParameterList .

    $default  reduce using rule 16 (ParameterList)


State 27

   12 FunctionDeclStmt: FuncOpen $@2 '(' ParameterList ')' . $@3 ReturnType $@4 FuncBlock

    $default  reduce using rule 10 ($@3)

    $@3  go to state 29


State 28

   15 ParameterList: IDENT ParamType $@5 . ParameterList

    IDENT  shift, and go to state 18
    ','    shift, and go to state 19

    $default  reduce using rule 17 (ParameterList)

    ParameterList  go to state 30


State 29

   12 FunctionDeclStmt: FuncOpen $@2 '(' ParameterList ')' $@3 . ReturnType $@4 FuncBlock

    INT     shift, and go to state 31
    FLOAT   shift, and go to state 32
    BOOL    shift, and go to state 33
    STRING  shift, and go to state 34

    $default  reduce using rule 26 (ReturnType)

    ReturnType  go to state 35


State 30

   15 ParameterList: IDENT ParamType $@5 ParameterList .

    $default  reduce using rule 15 (ParameterList)


State 31

   22 ReturnType: INT .

    $default  reduce using rule 22 (ReturnType)


State 32

   23 ReturnType: FLOAT .

    $default  reduce using rule 23 (ReturnType)


State 33

   25 ReturnType: BOOL .

    $default  reduce using rule 25 (ReturnType)


State 34

   24 ReturnType: STRING .

    $default  reduce using rule 24 (ReturnType)


State 35

   12 FunctionDeclStmt: FuncOpen $@2 '(' ParameterList ')' $@3 ReturnType . $@4 FuncBlock

    $default  reduce using rule 11 ($@4)

    $@4  go to state 36


State 36

   12 FunctionDeclStmt: FuncOpen $@2 '(' ParameterList ')' $@3 ReturnType $@4 . FuncBlock

    '{'  shift, and go to state 37

    FuncBlock  go to state 38


State 37

   27 FuncBlock: '{' . StatementList '}'

    VAR         shift, and go to state 39
    NEWLINE     shift, and go to state 40
    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IF          shift, and go to state 45
    FOR         shift, and go to state 46
    SWITCH      shift, and go to state 47
    CASE        shift, and go to state 48
    DEFAULT     shift, and go to state 49
    PRINT       shift, and go to state 50
    PRINTLN     shift, and go to state 51
    RETURN      shift, and go to state 52
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 57
    '('         shift, and go to state 58
    '{'         shift, and go to state 59
    '"'         shift, and go to state 60
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 117 ($@10)]
    FLOAT       [reduce using rule 117 ($@10)]
    BOOL        [reduce using rule 117 ($@10)]
    STRING      [reduce using rule 117 ($@10)]
    INT_LIT     [reduce using rule 117 ($@10)]
    FLOAT_LIT   [reduce using rule 117 ($@10)]
    STRING_LIT  [reduce using rule 117 ($@10)]
    BOOL_LIT    [reduce using rule 117 ($@10)]
    IDENT       [reduce using rule 117 ($@10)]
    '('         [reduce using rule 117 ($@10)]
    '+'         [reduce using rule 117 ($@10)]
    '-'         [reduce using rule 117 ($@10)]
    '!'         reduce using rule 117 ($@10)
    $default    reduce using rule 69 (StatementList)

    ReturnStmt       go to state 63
    Statement        go to state 64
    call_func        go to state 65
    DeclarationStmt  go to state 66
    SimpleStmt       go to state 67
    AssignmentStmt   go to state 68
    ExpressionStmt   go to state 69
    IncDecStmt       go to state 70
    Block            go to state 71
    StatementList    go to state 72
    IfStmt           go to state 73
    ForStmt          go to state 74
    SwitchStmt       go to state 75
    CaseStmt         go to state 76
    PrintStmt        go to state 77
    Type             go to state 78
    Expression       go to state 79
    UnaryExpr        go to state 80
    unary_op         go to state 81
    $@10             go to state 82
    PrimaryExpr      go to state 83
    Operand          go to state 84
    Literal          go to state 85
    ConversionExpr   go to state 86


State 38

   12 FunctionDeclStmt: FuncOpen $@2 '(' ParameterList ')' $@3 ReturnType $@4 FuncBlock .

    $default  reduce using rule 12 (FunctionDeclStmt)


State 39

   49 DeclarationStmt: VAR . IDENT Type Assign_ornot

    IDENT  shift, and go to state 87


State 40

   40 Statement: NEWLINE .

    $default  reduce using rule 40 (Statement)


State 41

   89 Type: INT .

    $default  reduce using rule 89 (Type)


State 42

   90 Type: FLOAT .

    $default  reduce using rule 90 (Type)


State 43

   92 Type: BOOL .

    $default  reduce using rule 92 (Type)


State 44

   91 Type: STRING .

    $default  reduce using rule 91 (Type)


State 45

   71 IfStmt: IF . Condition $@7 Block If_Else

    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 57
    '('         shift, and go to state 58
    '"'         shift, and go to state 60
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 117 ($@10)]
    FLOAT       [reduce using rule 117 ($@10)]
    BOOL        [reduce using rule 117 ($@10)]
    STRING      [reduce using rule 117 ($@10)]
    INT_LIT     [reduce using rule 117 ($@10)]
    FLOAT_LIT   [reduce using rule 117 ($@10)]
    STRING_LIT  [reduce using rule 117 ($@10)]
    BOOL_LIT    [reduce using rule 117 ($@10)]
    IDENT       [reduce using rule 117 ($@10)]
    '('         [reduce using rule 117 ($@10)]
    '+'         [reduce using rule 117 ($@10)]
    '-'         [reduce using rule 117 ($@10)]
    $default    reduce using rule 117 ($@10)

    call_func       go to state 88
    Condition       go to state 89
    Type            go to state 78
    Expression      go to state 90
    UnaryExpr       go to state 80
    unary_op        go to state 81
    $@10            go to state 82
    PrimaryExpr     go to state 83
    Operand         go to state 84
    Literal         go to state 85
    ConversionExpr  go to state 86


State 46

   78 ForStmt: FOR . Condition $@8 Block
   79        | FOR . ForClause Block

    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 57
    '('         shift, and go to state 58
    '"'         shift, and go to state 60
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 117 ($@10)]
    FLOAT       [reduce using rule 117 ($@10)]
    BOOL        [reduce using rule 117 ($@10)]
    STRING      [reduce using rule 117 ($@10)]
    INT_LIT     [reduce using rule 117 ($@10)]
    FLOAT_LIT   [reduce using rule 117 ($@10)]
    STRING_LIT  [reduce using rule 117 ($@10)]
    BOOL_LIT    [reduce using rule 117 ($@10)]
    IDENT       [reduce using rule 117 ($@10)]
    '('         [reduce using rule 117 ($@10)]
    '+'         [reduce using rule 117 ($@10)]
    '-'         [reduce using rule 117 ($@10)]
    $default    reduce using rule 117 ($@10)

    call_func       go to state 88
    SimpleStmt      go to state 91
    AssignmentStmt  go to state 68
    ExpressionStmt  go to state 69
    IncDecStmt      go to state 70
    Condition       go to state 92
    ForClause       go to state 93
    InitStmt        go to state 94
    Type            go to state 78
    Expression      go to state 95
    UnaryExpr       go to state 80
    unary_op        go to state 81
    $@10            go to state 82
    PrimaryExpr     go to state 83
    Operand         go to state 84
    Literal         go to state 85
    ConversionExpr  go to state 86


State 47

   83 SwitchStmt: SWITCH . Expression Block

    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 57
    '('         shift, and go to state 58
    '"'         shift, and go to state 60
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 117 ($@10)]
    FLOAT       [reduce using rule 117 ($@10)]
    BOOL        [reduce using rule 117 ($@10)]
    STRING      [reduce using rule 117 ($@10)]
    INT_LIT     [reduce using rule 117 ($@10)]
    FLOAT_LIT   [reduce using rule 117 ($@10)]
    STRING_LIT  [reduce using rule 117 ($@10)]
    BOOL_LIT    [reduce using rule 117 ($@10)]
    IDENT       [reduce using rule 117 ($@10)]
    '('         [reduce using rule 117 ($@10)]
    '+'         [reduce using rule 117 ($@10)]
    '-'         [reduce using rule 117 ($@10)]
    $default    reduce using rule 117 ($@10)

    call_func       go to state 88
    Type            go to state 78
    Expression      go to state 96
    UnaryExpr       go to state 80
    unary_op        go to state 81
    $@10            go to state 82
    PrimaryExpr     go to state 83
    Operand         go to state 84
    Literal         go to state 85
    ConversionExpr  go to state 86


State 48

   85 CaseStmt: CASE . INT_LIT $@9 ':' Block

    INT_LIT  shift, and go to state 97


State 49

   86 CaseStmt: DEFAULT . ':' Block

    ':'  shift, and go to state 98


State 50

   87 PrintStmt: PRINT . '(' Expression ')'

    '('  shift, and go to state 99


State 51

   88 PrintStmt: PRINTLN . '(' Expression ')'

    '('  shift, and go to state 100


State 52

   28 ReturnStmt: RETURN . HaveReturn

    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 57
    '('         shift, and go to state 58
    '"'         shift, and go to state 60
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 117 ($@10)]
    FLOAT       [reduce using rule 117 ($@10)]
    BOOL        [reduce using rule 117 ($@10)]
    STRING      [reduce using rule 117 ($@10)]
    INT_LIT     [reduce using rule 117 ($@10)]
    FLOAT_LIT   [reduce using rule 117 ($@10)]
    STRING_LIT  [reduce using rule 117 ($@10)]
    BOOL_LIT    [reduce using rule 117 ($@10)]
    IDENT       [reduce using rule 117 ($@10)]
    '('         [reduce using rule 117 ($@10)]
    '+'         [reduce using rule 117 ($@10)]
    '-'         [reduce using rule 117 ($@10)]
    '!'         reduce using rule 117 ($@10)
    $default    reduce using rule 30 (HaveReturn)

    HaveReturn      go to state 101
    call_func       go to state 88
    Type            go to state 78
    Expression      go to state 102
    UnaryExpr       go to state 80
    unary_op        go to state 81
    $@10            go to state 82
    PrimaryExpr     go to state 83
    Operand         go to state 84
    Literal         go to state 85
    ConversionExpr  go to state 86


State 53

  128 Literal: INT_LIT .

    $default  reduce using rule 128 (Literal)


State 54

  129 Literal: FLOAT_LIT .

    $default  reduce using rule 129 (Literal)


State 55

  131 Literal: STRING_LIT .

    $default  reduce using rule 131 (Literal)


State 56

  130 Literal: BOOL_LIT .

    $default  reduce using rule 130 (Literal)


State 57

   42 call_func: IDENT . '(' input_list ')'
  125 Operand: IDENT .

    '('  shift, and go to state 103

    $default  reduce using rule 125 (Operand)


State 58

  127 Operand: '(' . $@12 Expression ')'

    $default  reduce using rule 126 ($@12)

    $@12  go to state 104


State 59

   67 Block: '{' . $@6 StatementList '}'

    $default  reduce using rule 66 ($@6)

    $@6  go to state 105


State 60

   95 Expression: '"' . STRING_LIT '"'

    STRING_LIT  shift, and go to state 106


State 61

  115 unary_op: '+' .

    $default  reduce using rule 115 (unary_op)


State 62

  116 unary_op: '-' .

    $default  reduce using rule 116 (unary_op)


State 63

   39 Statement: ReturnStmt . NEWLINE

    NEWLINE  shift, and go to state 107


State 64

   68 StatementList: Statement . StatementList

    VAR         shift, and go to state 39
    NEWLINE     shift, and go to state 40
    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IF          shift, and go to state 45
    FOR         shift, and go to state 46
    SWITCH      shift, and go to state 47
    CASE        shift, and go to state 48
    DEFAULT     shift, and go to state 49
    PRINT       shift, and go to state 50
    PRINTLN     shift, and go to state 51
    RETURN      shift, and go to state 52
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 57
    '('         shift, and go to state 58
    '{'         shift, and go to state 59
    '"'         shift, and go to state 60
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 117 ($@10)]
    FLOAT       [reduce using rule 117 ($@10)]
    BOOL        [reduce using rule 117 ($@10)]
    STRING      [reduce using rule 117 ($@10)]
    INT_LIT     [reduce using rule 117 ($@10)]
    FLOAT_LIT   [reduce using rule 117 ($@10)]
    STRING_LIT  [reduce using rule 117 ($@10)]
    BOOL_LIT    [reduce using rule 117 ($@10)]
    IDENT       [reduce using rule 117 ($@10)]
    '('         [reduce using rule 117 ($@10)]
    '+'         [reduce using rule 117 ($@10)]
    '-'         [reduce using rule 117 ($@10)]
    '!'         reduce using rule 117 ($@10)
    $default    reduce using rule 69 (StatementList)

    ReturnStmt       go to state 63
    Statement        go to state 64
    call_func        go to state 65
    DeclarationStmt  go to state 66
    SimpleStmt       go to state 67
    AssignmentStmt   go to state 68
    ExpressionStmt   go to state 69
    IncDecStmt       go to state 70
    Block            go to state 71
    StatementList    go to state 108
    IfStmt           go to state 73
    ForStmt          go to state 74
    SwitchStmt       go to state 75
    CaseStmt         go to state 76
    PrintStmt        go to state 77
    Type             go to state 78
    Expression       go to state 79
    UnaryExpr        go to state 80
    unary_op         go to state 81
    $@10             go to state 82
    PrimaryExpr      go to state 83
    Operand          go to state 84
    Literal          go to state 85
    ConversionExpr   go to state 86


State 65

   41 Statement: call_func . NEWLINE
   96 Expression: call_func .

    NEWLINE  shift, and go to state 109

    NEWLINE   [reduce using rule 96 (Expression)]
    $default  reduce using rule 96 (Expression)


State 66

   31 Statement: DeclarationStmt . NEWLINE

    NEWLINE  shift, and go to state 110


State 67

   32 Statement: SimpleStmt . NEWLINE

    NEWLINE  shift, and go to state 111


State 68

   52 SimpleStmt: AssignmentStmt .

    $default  reduce using rule 52 (SimpleStmt)


State 69

   53 SimpleStmt: ExpressionStmt .

    $default  reduce using rule 53 (SimpleStmt)


State 70

   54 SimpleStmt: IncDecStmt .

    $default  reduce using rule 54 (SimpleStmt)


State 71

   33 Statement: Block .

    $default  reduce using rule 33 (Statement)


State 72

   27 FuncBlock: '{' StatementList . '}'

    '}'  shift, and go to state 112


State 73

   34 Statement: IfStmt .

    $default  reduce using rule 34 (Statement)


State 74

   35 Statement: ForStmt .

    $default  reduce using rule 35 (Statement)


State 75

   36 Statement: SwitchStmt .

    $default  reduce using rule 36 (Statement)


State 76

   37 Statement: CaseStmt .

    $default  reduce using rule 37 (Statement)


State 77

   38 Statement: PrintStmt . NEWLINE

    NEWLINE  shift, and go to state 113


State 78

  132 ConversionExpr: Type . '(' Expression ')'

    '('  shift, and go to state 114


State 79

   55 AssignmentStmt: Expression . assign_op Expression
   62 ExpressionStmt: Expression .
   63 IncDecStmt: Expression . INC_DEC
   94 Expression: Expression . binary_op Expression

    INC         shift, and go to state 115
    DEC         shift, and go to state 116
    GEQ         shift, and go to state 117
    LOR         shift, and go to state 118
    LAND        shift, and go to state 119
    LEQ         shift, and go to state 120
    EQL         shift, and go to state 121
    NEQ         shift, and go to state 122
    ADD_ASSIGN  shift, and go to state 123
    SUB_ASSIGN  shift, and go to state 124
    MUL_ASSIGN  shift, and go to state 125
    QUO_ASSIGN  shift, and go to state 126
    REM_ASSIGN  shift, and go to state 127
    '='         shift, and go to state 128
    '<'         shift, and go to state 129
    '>'         shift, and go to state 130
    '+'         shift, and go to state 131
    '-'         shift, and go to state 132
    '*'         shift, and go to state 133
    '/'         shift, and go to state 134
    '%'         shift, and go to state 135

    $default  reduce using rule 62 (ExpressionStmt)

    assign_op  go to state 136
    INC_DEC    go to state 137
    binary_op  go to state 138
    cmp_op     go to state 139
    add_op     go to state 140
    mul_op     go to state 141


State 80

   93 Expression: UnaryExpr .

    $default  reduce using rule 93 (Expression)


State 81

   98 UnaryExpr: unary_op . UnaryExpr

    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 142
    '('         shift, and go to state 58
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 117 ($@10)]
    FLOAT       [reduce using rule 117 ($@10)]
    BOOL        [reduce using rule 117 ($@10)]
    STRING      [reduce using rule 117 ($@10)]
    INT_LIT     [reduce using rule 117 ($@10)]
    FLOAT_LIT   [reduce using rule 117 ($@10)]
    STRING_LIT  [reduce using rule 117 ($@10)]
    BOOL_LIT    [reduce using rule 117 ($@10)]
    IDENT       [reduce using rule 117 ($@10)]
    '('         [reduce using rule 117 ($@10)]
    '+'         [reduce using rule 117 ($@10)]
    '-'         [reduce using rule 117 ($@10)]
    $default    reduce using rule 117 ($@10)

    Type            go to state 78
    UnaryExpr       go to state 143
    unary_op        go to state 81
    $@10            go to state 82
    PrimaryExpr     go to state 83
    Operand         go to state 84
    Literal         go to state 85
    ConversionExpr  go to state 86


State 82

  118 unary_op: $@10 . Dup_Not

    '!'  shift, and go to state 144

    '!'       [reduce using rule 121 (Dup_Not)]
    $default  reduce using rule 121 (Dup_Not)

    Dup_Not  go to state 145


State 83

   97 UnaryExpr: PrimaryExpr .

    $default  reduce using rule 97 (UnaryExpr)


State 84

  122 PrimaryExpr: Operand .

    $default  reduce using rule 122 (PrimaryExpr)


State 85

  124 Operand: Literal .

    $default  reduce using rule 124 (Operand)


State 86

  123 PrimaryExpr: ConversionExpr .

    $default  reduce using rule 123 (PrimaryExpr)


State 87

   49 DeclarationStmt: VAR IDENT . Type Assign_ornot

    INT     shift, and go to state 41
    FLOAT   shift, and go to state 42
    BOOL    shift, and go to state 43
    STRING  shift, and go to state 44

    Type  go to state 146


State 88

   96 Expression: call_func .

    $default  reduce using rule 96 (Expression)


State 89

   71 IfStmt: IF Condition . $@7 Block If_Else

    $default  reduce using rule 70 ($@7)

    $@7  go to state 147


State 90

   76 Condition: Expression .
   94 Expression: Expression . binary_op Expression

    GEQ   shift, and go to state 117
    LOR   shift, and go to state 118
    LAND  shift, and go to state 119
    LEQ   shift, and go to state 120
    EQL   shift, and go to state 121
    NEQ   shift, and go to state 122
    '<'   shift, and go to state 129
    '>'   shift, and go to state 130
    '+'   shift, and go to state 131
    '-'   shift, and go to state 132
    '*'   shift, and go to state 133
    '/'   shift, and go to state 134
    '%'   shift, and go to state 135

    $default  reduce using rule 76 (Condition)

    binary_op  go to state 138
    cmp_op     go to state 139
    add_op     go to state 140
    mul_op     go to state 141


State 91

   81 InitStmt: SimpleStmt .

    $default  reduce using rule 81 (InitStmt)


State 92

   78 ForStmt: FOR Condition . $@8 Block

    $default  reduce using rule 77 ($@8)

    $@8  go to state 148


State 93

   79 ForStmt: FOR ForClause . Block

    '{'  shift, and go to state 59

    Block  go to state 149


State 94

   80 ForClause: InitStmt . ';' Condition ';' PostStmt

    ';'  shift, and go to state 150


State 95

   55 AssignmentStmt: Expression . assign_op Expression
   62 ExpressionStmt: Expression .
   63 IncDecStmt: Expression . INC_DEC
   76 Condition: Expression .
   94 Expression: Expression . binary_op Expression

    INC         shift, and go to state 115
    DEC         shift, and go to state 116
    GEQ         shift, and go to state 117
    LOR         shift, and go to state 118
    LAND        shift, and go to state 119
    LEQ         shift, and go to state 120
    EQL         shift, and go to state 121
    NEQ         shift, and go to state 122
    ADD_ASSIGN  shift, and go to state 123
    SUB_ASSIGN  shift, and go to state 124
    MUL_ASSIGN  shift, and go to state 125
    QUO_ASSIGN  shift, and go to state 126
    REM_ASSIGN  shift, and go to state 127
    '='         shift, and go to state 128
    '<'         shift, and go to state 129
    '>'         shift, and go to state 130
    '+'         shift, and go to state 131
    '-'         shift, and go to state 132
    '*'         shift, and go to state 133
    '/'         shift, and go to state 134
    '%'         shift, and go to state 135

    '{'       reduce using rule 76 (Condition)
    $default  reduce using rule 62 (ExpressionStmt)

    assign_op  go to state 136
    INC_DEC    go to state 137
    binary_op  go to state 138
    cmp_op     go to state 139
    add_op     go to state 140
    mul_op     go to state 141


State 96

   83 SwitchStmt: SWITCH Expression . Block
   94 Expression: Expression . binary_op Expression

    GEQ   shift, and go to state 117
    LOR   shift, and go to state 118
    LAND  shift, and go to state 119
    LEQ   shift, and go to state 120
    EQL   shift, and go to state 121
    NEQ   shift, and go to state 122
    '{'   shift, and go to state 59
    '<'   shift, and go to state 129
    '>'   shift, and go to state 130
    '+'   shift, and go to state 131
    '-'   shift, and go to state 132
    '*'   shift, and go to state 133
    '/'   shift, and go to state 134
    '%'   shift, and go to state 135

    Block      go to state 151
    binary_op  go to state 138
    cmp_op     go to state 139
    add_op     go to state 140
    mul_op     go to state 141


State 97

   85 CaseStmt: CASE INT_LIT . $@9 ':' Block

    $default  reduce using rule 84 ($@9)

    $@9  go to state 152


State 98

   86 CaseStmt: DEFAULT ':' . Block

    '{'  shift, and go to state 59

    Block  go to state 153


State 99

   87 PrintStmt: PRINT '(' . Expression ')'

    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 57
    '('         shift, and go to state 58
    '"'         shift, and go to state 60
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 117 ($@10)]
    FLOAT       [reduce using rule 117 ($@10)]
    BOOL        [reduce using rule 117 ($@10)]
    STRING      [reduce using rule 117 ($@10)]
    INT_LIT     [reduce using rule 117 ($@10)]
    FLOAT_LIT   [reduce using rule 117 ($@10)]
    STRING_LIT  [reduce using rule 117 ($@10)]
    BOOL_LIT    [reduce using rule 117 ($@10)]
    IDENT       [reduce using rule 117 ($@10)]
    '('         [reduce using rule 117 ($@10)]
    '+'         [reduce using rule 117 ($@10)]
    '-'         [reduce using rule 117 ($@10)]
    $default    reduce using rule 117 ($@10)

    call_func       go to state 88
    Type            go to state 78
    Expression      go to state 154
    UnaryExpr       go to state 80
    unary_op        go to state 81
    $@10            go to state 82
    PrimaryExpr     go to state 83
    Operand         go to state 84
    Literal         go to state 85
    ConversionExpr  go to state 86


State 100

   88 PrintStmt: PRINTLN '(' . Expression ')'

    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 57
    '('         shift, and go to state 58
    '"'         shift, and go to state 60
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 117 ($@10)]
    FLOAT       [reduce using rule 117 ($@10)]
    BOOL        [reduce using rule 117 ($@10)]
    STRING      [reduce using rule 117 ($@10)]
    INT_LIT     [reduce using rule 117 ($@10)]
    FLOAT_LIT   [reduce using rule 117 ($@10)]
    STRING_LIT  [reduce using rule 117 ($@10)]
    BOOL_LIT    [reduce using rule 117 ($@10)]
    IDENT       [reduce using rule 117 ($@10)]
    '('         [reduce using rule 117 ($@10)]
    '+'         [reduce using rule 117 ($@10)]
    '-'         [reduce using rule 117 ($@10)]
    $default    reduce using rule 117 ($@10)

    call_func       go to state 88
    Type            go to state 78
    Expression      go to state 155
    UnaryExpr       go to state 80
    unary_op        go to state 81
    $@10            go to state 82
    PrimaryExpr     go to state 83
    Operand         go to state 84
    Literal         go to state 85
    ConversionExpr  go to state 86


State 101

   28 ReturnStmt: RETURN HaveReturn .

    $default  reduce using rule 28 (ReturnStmt)


State 102

   29 HaveReturn: Expression .
   94 Expression: Expression . binary_op Expression

    GEQ   shift, and go to state 117
    LOR   shift, and go to state 118
    LAND  shift, and go to state 119
    LEQ   shift, and go to state 120
    EQL   shift, and go to state 121
    NEQ   shift, and go to state 122
    '<'   shift, and go to state 129
    '>'   shift, and go to state 130
    '+'   shift, and go to state 131
    '-'   shift, and go to state 132
    '*'   shift, and go to state 133
    '/'   shift, and go to state 134
    '%'   shift, and go to state 135

    $default  reduce using rule 29 (HaveReturn)

    binary_op  go to state 138
    cmp_op     go to state 139
    add_op     go to state 140
    mul_op     go to state 141


State 103

   42 call_func: IDENT '(' . input_list ')'

    INT_LIT    shift, and go to state 156
    FLOAT_LIT  shift, and go to state 157
    IDENT      shift, and go to state 158
    ','        shift, and go to state 159

    $default  reduce using rule 45 (input_list)

    input_list  go to state 160
    input       go to state 161


State 104

  127 Operand: '(' $@12 . Expression ')'

    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 57
    '('         shift, and go to state 58
    '"'         shift, and go to state 60
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 117 ($@10)]
    FLOAT       [reduce using rule 117 ($@10)]
    BOOL        [reduce using rule 117 ($@10)]
    STRING      [reduce using rule 117 ($@10)]
    INT_LIT     [reduce using rule 117 ($@10)]
    FLOAT_LIT   [reduce using rule 117 ($@10)]
    STRING_LIT  [reduce using rule 117 ($@10)]
    BOOL_LIT    [reduce using rule 117 ($@10)]
    IDENT       [reduce using rule 117 ($@10)]
    '('         [reduce using rule 117 ($@10)]
    '+'         [reduce using rule 117 ($@10)]
    '-'         [reduce using rule 117 ($@10)]
    $default    reduce using rule 117 ($@10)

    call_func       go to state 88
    Type            go to state 78
    Expression      go to state 162
    UnaryExpr       go to state 80
    unary_op        go to state 81
    $@10            go to state 82
    PrimaryExpr     go to state 83
    Operand         go to state 84
    Literal         go to state 85
    ConversionExpr  go to state 86


State 105

   67 Block: '{' $@6 . StatementList '}'

    VAR         shift, and go to state 39
    NEWLINE     shift, and go to state 40
    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    IF          shift, and go to state 45
    FOR         shift, and go to state 46
    SWITCH      shift, and go to state 47
    CASE        shift, and go to state 48
    DEFAULT     shift, and go to state 49
    PRINT       shift, and go to state 50
    PRINTLN     shift, and go to state 51
    RETURN      shift, and go to state 52
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 57
    '('         shift, and go to state 58
    '{'         shift, and go to state 59
    '"'         shift, and go to state 60
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 117 ($@10)]
    FLOAT       [reduce using rule 117 ($@10)]
    BOOL        [reduce using rule 117 ($@10)]
    STRING      [reduce using rule 117 ($@10)]
    INT_LIT     [reduce using rule 117 ($@10)]
    FLOAT_LIT   [reduce using rule 117 ($@10)]
    STRING_LIT  [reduce using rule 117 ($@10)]
    BOOL_LIT    [reduce using rule 117 ($@10)]
    IDENT       [reduce using rule 117 ($@10)]
    '('         [reduce using rule 117 ($@10)]
    '+'         [reduce using rule 117 ($@10)]
    '-'         [reduce using rule 117 ($@10)]
    '!'         reduce using rule 117 ($@10)
    $default    reduce using rule 69 (StatementList)

    ReturnStmt       go to state 63
    Statement        go to state 64
    call_func        go to state 65
    DeclarationStmt  go to state 66
    SimpleStmt       go to state 67
    AssignmentStmt   go to state 68
    ExpressionStmt   go to state 69
    IncDecStmt       go to state 70
    Block            go to state 71
    StatementList    go to state 163
    IfStmt           go to state 73
    ForStmt          go to state 74
    SwitchStmt       go to state 75
    CaseStmt         go to state 76
    PrintStmt        go to state 77
    Type             go to state 78
    Expression       go to state 79
    UnaryExpr        go to state 80
    unary_op         go to state 81
    $@10             go to state 82
    PrimaryExpr      go to state 83
    Operand          go to state 84
    Literal          go to state 85
    ConversionExpr   go to state 86


State 106

   95 Expression: '"' STRING_LIT . '"'

    '"'  shift, and go to state 164


State 107

   39 Statement: ReturnStmt NEWLINE .

    $default  reduce using rule 39 (Statement)


State 108

   68 StatementList: Statement StatementList .

    $default  reduce using rule 68 (StatementList)


State 109

   41 Statement: call_func NEWLINE .

    $default  reduce using rule 41 (Statement)


State 110

   31 Statement: DeclarationStmt NEWLINE .

    $default  reduce using rule 31 (Statement)


State 111

   32 Statement: SimpleStmt NEWLINE .

    $default  reduce using rule 32 (Statement)


State 112

   27 FuncBlock: '{' StatementList '}' .

    $default  reduce using rule 27 (FuncBlock)


State 113

   38 Statement: PrintStmt NEWLINE .

    $default  reduce using rule 38 (Statement)


State 114

  132 ConversionExpr: Type '(' . Expression ')'

    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 57
    '('         shift, and go to state 58
    '"'         shift, and go to state 60
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 117 ($@10)]
    FLOAT       [reduce using rule 117 ($@10)]
    BOOL        [reduce using rule 117 ($@10)]
    STRING      [reduce using rule 117 ($@10)]
    INT_LIT     [reduce using rule 117 ($@10)]
    FLOAT_LIT   [reduce using rule 117 ($@10)]
    STRING_LIT  [reduce using rule 117 ($@10)]
    BOOL_LIT    [reduce using rule 117 ($@10)]
    IDENT       [reduce using rule 117 ($@10)]
    '('         [reduce using rule 117 ($@10)]
    '+'         [reduce using rule 117 ($@10)]
    '-'         [reduce using rule 117 ($@10)]
    $default    reduce using rule 117 ($@10)

    call_func       go to state 88
    Type            go to state 78
    Expression      go to state 165
    UnaryExpr       go to state 80
    unary_op        go to state 81
    $@10            go to state 82
    PrimaryExpr     go to state 83
    Operand         go to state 84
    Literal         go to state 85
    ConversionExpr  go to state 86


State 115

   64 INC_DEC: INC .

    $default  reduce using rule 64 (INC_DEC)


State 116

   65 INC_DEC: DEC .

    $default  reduce using rule 65 (INC_DEC)


State 117

  109 cmp_op: GEQ .

    $default  reduce using rule 109 (cmp_op)


State 118

   99 binary_op: LOR .

    $default  reduce using rule 99 (binary_op)


State 119

  100 binary_op: LAND .

    $default  reduce using rule 100 (binary_op)


State 120

  107 cmp_op: LEQ .

    $default  reduce using rule 107 (cmp_op)


State 121

  104 cmp_op: EQL .

    $default  reduce using rule 104 (cmp_op)


State 122

  105 cmp_op: NEQ .

    $default  reduce using rule 105 (cmp_op)


State 123

   57 assign_op: ADD_ASSIGN .

    $default  reduce using rule 57 (assign_op)


State 124

   58 assign_op: SUB_ASSIGN .

    $default  reduce using rule 58 (assign_op)


State 125

   59 assign_op: MUL_ASSIGN .

    $default  reduce using rule 59 (assign_op)


State 126

   60 assign_op: QUO_ASSIGN .

    $default  reduce using rule 60 (assign_op)


State 127

   61 assign_op: REM_ASSIGN .

    $default  reduce using rule 61 (assign_op)


State 128

   56 assign_op: '=' .

    $default  reduce using rule 56 (assign_op)


State 129

  106 cmp_op: '<' .

    $default  reduce using rule 106 (cmp_op)


State 130

  108 cmp_op: '>' .

    $default  reduce using rule 108 (cmp_op)


State 131

  110 add_op: '+' .

    $default  reduce using rule 110 (add_op)


State 132

  111 add_op: '-' .

    $default  reduce using rule 111 (add_op)


State 133

  112 mul_op: '*' .

    $default  reduce using rule 112 (mul_op)


State 134

  113 mul_op: '/' .

    $default  reduce using rule 113 (mul_op)


State 135

  114 mul_op: '%' .

    $default  reduce using rule 114 (mul_op)


State 136

   55 AssignmentStmt: Expression assign_op . Expression

    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 57
    '('         shift, and go to state 58
    '"'         shift, and go to state 60
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 117 ($@10)]
    FLOAT       [reduce using rule 117 ($@10)]
    BOOL        [reduce using rule 117 ($@10)]
    STRING      [reduce using rule 117 ($@10)]
    INT_LIT     [reduce using rule 117 ($@10)]
    FLOAT_LIT   [reduce using rule 117 ($@10)]
    STRING_LIT  [reduce using rule 117 ($@10)]
    BOOL_LIT    [reduce using rule 117 ($@10)]
    IDENT       [reduce using rule 117 ($@10)]
    '('         [reduce using rule 117 ($@10)]
    '+'         [reduce using rule 117 ($@10)]
    '-'         [reduce using rule 117 ($@10)]
    $default    reduce using rule 117 ($@10)

    call_func       go to state 88
    Type            go to state 78
    Expression      go to state 166
    UnaryExpr       go to state 80
    unary_op        go to state 81
    $@10            go to state 82
    PrimaryExpr     go to state 83
    Operand         go to state 84
    Literal         go to state 85
    ConversionExpr  go to state 86


State 137

   63 IncDecStmt: Expression INC_DEC .

    $default  reduce using rule 63 (IncDecStmt)


State 138

   94 Expression: Expression binary_op . Expression

    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 57
    '('         shift, and go to state 58
    '"'         shift, and go to state 60
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 117 ($@10)]
    FLOAT       [reduce using rule 117 ($@10)]
    BOOL        [reduce using rule 117 ($@10)]
    STRING      [reduce using rule 117 ($@10)]
    INT_LIT     [reduce using rule 117 ($@10)]
    FLOAT_LIT   [reduce using rule 117 ($@10)]
    STRING_LIT  [reduce using rule 117 ($@10)]
    BOOL_LIT    [reduce using rule 117 ($@10)]
    IDENT       [reduce using rule 117 ($@10)]
    '('         [reduce using rule 117 ($@10)]
    '+'         [reduce using rule 117 ($@10)]
    '-'         [reduce using rule 117 ($@10)]
    $default    reduce using rule 117 ($@10)

    call_func       go to state 88
    Type            go to state 78
    Expression      go to state 167
    UnaryExpr       go to state 80
    unary_op        go to state 81
    $@10            go to state 82
    PrimaryExpr     go to state 83
    Operand         go to state 84
    Literal         go to state 85
    ConversionExpr  go to state 86


State 139

  101 binary_op: cmp_op .

    $default  reduce using rule 101 (binary_op)


State 140

  102 binary_op: add_op .

    $default  reduce using rule 102 (binary_op)


State 141

  103 binary_op: mul_op .

    $default  reduce using rule 103 (binary_op)


State 142

  125 Operand: IDENT .

    $default  reduce using rule 125 (Operand)


State 143

   98 UnaryExpr: unary_op UnaryExpr .

    $default  reduce using rule 98 (UnaryExpr)


State 144

  120 Dup_Not: '!' . $@11 Dup_Not

    $default  reduce using rule 119 ($@11)

    $@11  go to state 168


State 145

  118 unary_op: $@10 Dup_Not .

    $default  reduce using rule 118 (unary_op)


State 146

   49 DeclarationStmt: VAR IDENT Type . Assign_ornot

    '='  shift, and go to state 169

    $default  reduce using rule 51 (Assign_ornot)

    Assign_ornot  go to state 170


State 147

   71 IfStmt: IF Condition $@7 . Block If_Else

    '{'  shift, and go to state 59

    Block  go to state 171


State 148

   78 ForStmt: FOR Condition $@8 . Block

    '{'  shift, and go to state 59

    Block  go to state 172


State 149

   79 ForStmt: FOR ForClause Block .

    $default  reduce using rule 79 (ForStmt)


State 150

   80 ForClause: InitStmt ';' . Condition ';' PostStmt

    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 57
    '('         shift, and go to state 58
    '"'         shift, and go to state 60
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 117 ($@10)]
    FLOAT       [reduce using rule 117 ($@10)]
    BOOL        [reduce using rule 117 ($@10)]
    STRING      [reduce using rule 117 ($@10)]
    INT_LIT     [reduce using rule 117 ($@10)]
    FLOAT_LIT   [reduce using rule 117 ($@10)]
    STRING_LIT  [reduce using rule 117 ($@10)]
    BOOL_LIT    [reduce using rule 117 ($@10)]
    IDENT       [reduce using rule 117 ($@10)]
    '('         [reduce using rule 117 ($@10)]
    '+'         [reduce using rule 117 ($@10)]
    '-'         [reduce using rule 117 ($@10)]
    $default    reduce using rule 117 ($@10)

    call_func       go to state 88
    Condition       go to state 173
    Type            go to state 78
    Expression      go to state 90
    UnaryExpr       go to state 80
    unary_op        go to state 81
    $@10            go to state 82
    PrimaryExpr     go to state 83
    Operand         go to state 84
    Literal         go to state 85
    ConversionExpr  go to state 86


State 151

   83 SwitchStmt: SWITCH Expression Block .

    $default  reduce using rule 83 (SwitchStmt)


State 152

   85 CaseStmt: CASE INT_LIT $@9 . ':' Block

    ':'  shift, and go to state 174


State 153

   86 CaseStmt: DEFAULT ':' Block .

    $default  reduce using rule 86 (CaseStmt)


State 154

   87 PrintStmt: PRINT '(' Expression . ')'
   94 Expression: Expression . binary_op Expression

    GEQ   shift, and go to state 117
    LOR   shift, and go to state 118
    LAND  shift, and go to state 119
    LEQ   shift, and go to state 120
    EQL   shift, and go to state 121
    NEQ   shift, and go to state 122
    ')'   shift, and go to state 175
    '<'   shift, and go to state 129
    '>'   shift, and go to state 130
    '+'   shift, and go to state 131
    '-'   shift, and go to state 132
    '*'   shift, and go to state 133
    '/'   shift, and go to state 134
    '%'   shift, and go to state 135

    binary_op  go to state 138
    cmp_op     go to state 139
    add_op     go to state 140
    mul_op     go to state 141


State 155

   88 PrintStmt: PRINTLN '(' Expression . ')'
   94 Expression: Expression . binary_op Expression

    GEQ   shift, and go to state 117
    LOR   shift, and go to state 118
    LAND  shift, and go to state 119
    LEQ   shift, and go to state 120
    EQL   shift, and go to state 121
    NEQ   shift, and go to state 122
    ')'   shift, and go to state 176
    '<'   shift, and go to state 129
    '>'   shift, and go to state 130
    '+'   shift, and go to state 131
    '-'   shift, and go to state 132
    '*'   shift, and go to state 133
    '/'   shift, and go to state 134
    '%'   shift, and go to state 135

    binary_op  go to state 138
    cmp_op     go to state 139
    add_op     go to state 140
    mul_op     go to state 141


State 156

   47 input: INT_LIT .

    $default  reduce using rule 47 (input)


State 157

   48 input: FLOAT_LIT .

    $default  reduce using rule 48 (input)


State 158

   46 input: IDENT .

    $default  reduce using rule 46 (input)


State 159

   44 input_list: ',' . input_list

    INT_LIT    shift, and go to state 156
    FLOAT_LIT  shift, and go to state 157
    IDENT      shift, and go to state 158
    ','        shift, and go to state 159

    $default  reduce using rule 45 (input_list)

    input_list  go to state 177
    input       go to state 161


State 160

   42 call_func: IDENT '(' input_list . ')'

    ')'  shift, and go to state 178


State 161

   43 input_list: input . input_list

    INT_LIT    shift, and go to state 156
    FLOAT_LIT  shift, and go to state 157
    IDENT      shift, and go to state 158
    ','        shift, and go to state 159

    $default  reduce using rule 45 (input_list)

    input_list  go to state 179
    input       go to state 161


State 162

   94 Expression: Expression . binary_op Expression
  127 Operand: '(' $@12 Expression . ')'

    GEQ   shift, and go to state 117
    LOR   shift, and go to state 118
    LAND  shift, and go to state 119
    LEQ   shift, and go to state 120
    EQL   shift, and go to state 121
    NEQ   shift, and go to state 122
    ')'   shift, and go to state 180
    '<'   shift, and go to state 129
    '>'   shift, and go to state 130
    '+'   shift, and go to state 131
    '-'   shift, and go to state 132
    '*'   shift, and go to state 133
    '/'   shift, and go to state 134
    '%'   shift, and go to state 135

    binary_op  go to state 138
    cmp_op     go to state 139
    add_op     go to state 140
    mul_op     go to state 141


State 163

   67 Block: '{' $@6 StatementList . '}'

    '}'  shift, and go to state 181


State 164

   95 Expression: '"' STRING_LIT '"' .

    $default  reduce using rule 95 (Expression)


State 165

   94 Expression: Expression . binary_op Expression
  132 ConversionExpr: Type '(' Expression . ')'

    GEQ   shift, and go to state 117
    LOR   shift, and go to state 118
    LAND  shift, and go to state 119
    LEQ   shift, and go to state 120
    EQL   shift, and go to state 121
    NEQ   shift, and go to state 122
    ')'   shift, and go to state 182
    '<'   shift, and go to state 129
    '>'   shift, and go to state 130
    '+'   shift, and go to state 131
    '-'   shift, and go to state 132
    '*'   shift, and go to state 133
    '/'   shift, and go to state 134
    '%'   shift, and go to state 135

    binary_op  go to state 138
    cmp_op     go to state 139
    add_op     go to state 140
    mul_op     go to state 141


State 166

   55 AssignmentStmt: Expression assign_op Expression .
   94 Expression: Expression . binary_op Expression

    GEQ   shift, and go to state 117
    LOR   shift, and go to state 118
    LAND  shift, and go to state 119
    LEQ   shift, and go to state 120
    EQL   shift, and go to state 121
    NEQ   shift, and go to state 122
    '<'   shift, and go to state 129
    '>'   shift, and go to state 130
    '+'   shift, and go to state 131
    '-'   shift, and go to state 132
    '*'   shift, and go to state 133
    '/'   shift, and go to state 134
    '%'   shift, and go to state 135

    $default  reduce using rule 55 (AssignmentStmt)

    binary_op  go to state 138
    cmp_op     go to state 139
    add_op     go to state 140
    mul_op     go to state 141


State 167

   94 Expression: Expression . binary_op Expression
   94           | Expression binary_op Expression .

    GEQ   shift, and go to state 117
    LOR   shift, and go to state 118
    LAND  shift, and go to state 119
    LEQ   shift, and go to state 120
    EQL   shift, and go to state 121
    NEQ   shift, and go to state 122
    '<'   shift, and go to state 129
    '>'   shift, and go to state 130
    '+'   shift, and go to state 131
    '-'   shift, and go to state 132
    '*'   shift, and go to state 133
    '/'   shift, and go to state 134
    '%'   shift, and go to state 135

    GEQ       [reduce using rule 94 (Expression)]
    LOR       [reduce using rule 94 (Expression)]
    LAND      [reduce using rule 94 (Expression)]
    LEQ       [reduce using rule 94 (Expression)]
    EQL       [reduce using rule 94 (Expression)]
    NEQ       [reduce using rule 94 (Expression)]
    '<'       [reduce using rule 94 (Expression)]
    '>'       [reduce using rule 94 (Expression)]
    '+'       [reduce using rule 94 (Expression)]
    '-'       [reduce using rule 94 (Expression)]
    '*'       [reduce using rule 94 (Expression)]
    '/'       [reduce using rule 94 (Expression)]
    '%'       [reduce using rule 94 (Expression)]
    $default  reduce using rule 94 (Expression)

    binary_op  go to state 138
    cmp_op     go to state 139
    add_op     go to state 140
    mul_op     go to state 141


State 168

  120 Dup_Not: '!' $@11 . Dup_Not

    '!'  shift, and go to state 144

    '!'       [reduce using rule 121 (Dup_Not)]
    $default  reduce using rule 121 (Dup_Not)

    Dup_Not  go to state 183


State 169

   50 Assign_ornot: '=' . Expression

    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 57
    '('         shift, and go to state 58
    '"'         shift, and go to state 60
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 117 ($@10)]
    FLOAT       [reduce using rule 117 ($@10)]
    BOOL        [reduce using rule 117 ($@10)]
    STRING      [reduce using rule 117 ($@10)]
    INT_LIT     [reduce using rule 117 ($@10)]
    FLOAT_LIT   [reduce using rule 117 ($@10)]
    STRING_LIT  [reduce using rule 117 ($@10)]
    BOOL_LIT    [reduce using rule 117 ($@10)]
    IDENT       [reduce using rule 117 ($@10)]
    '('         [reduce using rule 117 ($@10)]
    '+'         [reduce using rule 117 ($@10)]
    '-'         [reduce using rule 117 ($@10)]
    $default    reduce using rule 117 ($@10)

    call_func       go to state 88
    Type            go to state 78
    Expression      go to state 184
    UnaryExpr       go to state 80
    unary_op        go to state 81
    $@10            go to state 82
    PrimaryExpr     go to state 83
    Operand         go to state 84
    Literal         go to state 85
    ConversionExpr  go to state 86


State 170

   49 DeclarationStmt: VAR IDENT Type Assign_ornot .

    $default  reduce using rule 49 (DeclarationStmt)


State 171

   71 IfStmt: IF Condition $@7 Block . If_Else

    ELSE  shift, and go to state 185

    $default  reduce using rule 73 (If_Else)

    If_Else  go to state 186


State 172

   78 ForStmt: FOR Condition $@8 Block .

    $default  reduce using rule 78 (ForStmt)


State 173

   80 ForClause: InitStmt ';' Condition . ';' PostStmt

    ';'  shift, and go to state 187


State 174

   85 CaseStmt: CASE INT_LIT $@9 ':' . Block

    '{'  shift, and go to state 59

    Block  go to state 188


State 175

   87 PrintStmt: PRINT '(' Expression ')' .

    $default  reduce using rule 87 (PrintStmt)


State 176

   88 PrintStmt: PRINTLN '(' Expression ')' .

    $default  reduce using rule 88 (PrintStmt)


State 177

   44 input_list: ',' input_list .

    $default  reduce using rule 44 (input_list)


State 178

   42 call_func: IDENT '(' input_list ')' .

    $default  reduce using rule 42 (call_func)


State 179

   43 input_list: input input_list .

    $default  reduce using rule 43 (input_list)


State 180

  127 Operand: '(' $@12 Expression ')' .

    $default  reduce using rule 127 (Operand)


State 181

   67 Block: '{' $@6 StatementList '}' .

    $default  reduce using rule 67 (Block)


State 182

  132 ConversionExpr: Type '(' Expression ')' .

    $default  reduce using rule 132 (ConversionExpr)


State 183

  120 Dup_Not: '!' $@11 Dup_Not .

    $default  reduce using rule 120 (Dup_Not)


State 184

   50 Assign_ornot: '=' Expression .
   94 Expression: Expression . binary_op Expression

    GEQ   shift, and go to state 117
    LOR   shift, and go to state 118
    LAND  shift, and go to state 119
    LEQ   shift, and go to state 120
    EQL   shift, and go to state 121
    NEQ   shift, and go to state 122
    '<'   shift, and go to state 129
    '>'   shift, and go to state 130
    '+'   shift, and go to state 131
    '-'   shift, and go to state 132
    '*'   shift, and go to state 133
    '/'   shift, and go to state 134
    '%'   shift, and go to state 135

    $default  reduce using rule 50 (Assign_ornot)

    binary_op  go to state 138
    cmp_op     go to state 139
    add_op     go to state 140
    mul_op     go to state 141


State 185

   72 If_Else: ELSE . If_Block

    IF   shift, and go to state 45
    '{'  shift, and go to state 59

    Block     go to state 189
    IfStmt    go to state 190
    If_Block  go to state 191


State 186

   71 IfStmt: IF Condition $@7 Block If_Else .

    $default  reduce using rule 71 (IfStmt)


State 187

   80 ForClause: InitStmt ';' Condition ';' . PostStmt

    INT         shift, and go to state 41
    FLOAT       shift, and go to state 42
    BOOL        shift, and go to state 43
    STRING      shift, and go to state 44
    INT_LIT     shift, and go to state 53
    FLOAT_LIT   shift, and go to state 54
    STRING_LIT  shift, and go to state 55
    BOOL_LIT    shift, and go to state 56
    IDENT       shift, and go to state 57
    '('         shift, and go to state 58
    '"'         shift, and go to state 60
    '+'         shift, and go to state 61
    '-'         shift, and go to state 62

    INT         [reduce using rule 117 ($@10)]
    FLOAT       [reduce using rule 117 ($@10)]
    BOOL        [reduce using rule 117 ($@10)]
    STRING      [reduce using rule 117 ($@10)]
    INT_LIT     [reduce using rule 117 ($@10)]
    FLOAT_LIT   [reduce using rule 117 ($@10)]
    STRING_LIT  [reduce using rule 117 ($@10)]
    BOOL_LIT    [reduce using rule 117 ($@10)]
    IDENT       [reduce using rule 117 ($@10)]
    '('         [reduce using rule 117 ($@10)]
    '+'         [reduce using rule 117 ($@10)]
    '-'         [reduce using rule 117 ($@10)]
    $default    reduce using rule 117 ($@10)

    call_func       go to state 88
    SimpleStmt      go to state 192
    AssignmentStmt  go to state 68
    ExpressionStmt  go to state 69
    IncDecStmt      go to state 70
    PostStmt        go to state 193
    Type            go to state 78
    Expression      go to state 79
    UnaryExpr       go to state 80
    unary_op        go to state 81
    $@10            go to state 82
    PrimaryExpr     go to state 83
    Operand         go to state 84
    Literal         go to state 85
    ConversionExpr  go to state 86


State 188

   85 CaseStmt: CASE INT_LIT $@9 ':' Block .

    $default  reduce using rule 85 (CaseStmt)


State 189

   75 If_Block: Block .

    $default  reduce using rule 75 (If_Block)


State 190

   74 If_Block: IfStmt .

    $default  reduce using rule 74 (If_Block)


State 191

   72 If_Else: ELSE If_Block .

    $default  reduce using rule 72 (If_Else)


State 192

   82 PostStmt: SimpleStmt .

    $default  reduce using rule 82 (PostStmt)


State 193

   80 ForClause: InitStmt ';' Condition ';' PostStmt .

    $default  reduce using rule 80 (ForClause)
